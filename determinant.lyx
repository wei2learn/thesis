#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass report
\use_default_options true
\begin_modules
theorems-ams
theorems-chap
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine natbib_authoryear
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "chap:determinant"

\end_inset

Diagonal Entries of Hermite Normal Form and Determinant
\end_layout

\begin_layout Standard
In this Chapter, we consider the problem of computing a determinant of a
 nonsingular input matrix 
\begin_inset Formula $\mathbf{F}\in\mathbb{K}\left[x\right]^{n\times n}$
\end_inset

 with column degrees bounded by a shift 
\begin_inset Formula $\vec{s}$
\end_inset

.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
For simplicity, let us assume the dimension 
\begin_inset Formula $n$
\end_inset

 is a power of two.
 But keep in mind that the method discussed in this chapter works for any
 dimension.
 
\end_layout

\end_inset

The computation is done by using the column basis and kernel basis computation
 to compute the diagonal entries of the Hermite form of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, and then multiply these diagonal entries.
\end_layout

\begin_layout Standard
Consider unimodularly transforming 
\begin_inset Formula $\mathbf{F}$
\end_inset

 to 
\begin_inset Formula 
\begin{equation}
\mathbf{F}\mathbf{U}=\mathbf{G}=\begin{bmatrix}\mathbf{G}_{1} & 0\\
* & \mathbf{G}_{2}
\end{bmatrix},\label{eq:step1HermiteDiagonal}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\begin_inset Formula 
\begin{equation}
\mathbf{F}\mathbf{U}=\mathbf{F}^{(1)}\mathbf{U}^{(1)}=\begin{bmatrix}\mathbf{F}_{0}^{(1)}\\
\mathbf{F}_{1}^{(1)}
\end{bmatrix}\begin{bmatrix}* & \mathbf{N}_{1}\end{bmatrix}=\mathbf{F}^{(2)}=\begin{bmatrix}\mathbf{F}_{0}^{(2)} & 0\\
* & \mathbf{F}_{1}^{(2)}
\end{bmatrix},\label{eq:step1HermiteDiagonal-1}
\end{equation}

\end_inset


\end_layout

\end_inset

 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Also note that the matrix 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

 is a GCLD or 
\begin_inset Formula $\mathbf{F}_{u}$
\end_inset

, and the matrix 
\begin_inset Formula $\mathbf{U}_{r}$
\end_inset

 on the right side of 
\begin_inset Formula $\mathbf{U}$
\end_inset

 is a kernel basis
\series bold
 
\series default
of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, which makes the top right block of 
\begin_inset Formula $\mathbf{G}$
\end_inset

 zero.
 
\end_layout

\end_inset

After this unimodular transformation, which eliminated the top right block
 of 
\begin_inset Formula $\mathbf{G}$
\end_inset

 , the matrix is now closer to the Hermite normal form of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 This procedure can then be applied recursively to 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{G}_{2}$
\end_inset

, until the matrices reaching dimension 1, which then gives the diagonal
 entries of the Hermite normal form of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
\end_layout

\begin_layout Standard
Although this procedure correctly computes the diagonal entries of the Hermite
 normal form of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, a major problem is that the degree of the unimodular 
\begin_inset Formula $\mathbf{U}$
\end_inset

 can be too large for 
\begin_inset Formula $\mathbf{U}$
\end_inset

 to be efficiently computed.
 However, with the tools we have developed in the earlier chapters, we can
 efficiently compute 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{G}_{2}$
\end_inset

 without computing 
\begin_inset Formula $\mathbf{U}$
\end_inset

.
\begin_inset Note Note
status collapsed

\begin_layout Lemma
Any nonsingular matrix 
\begin_inset Formula $\mathbf{F}\in\mathbb{K}\left[x\right]^{n\times n}$
\end_inset

 can be unimodularly transformed to 
\begin_inset Formula 
\[
\mathbf{F}\mathbf{U}=\begin{bmatrix}\mathbf{G}_{1} & 0\\
* & \mathbf{G}_{2}
\end{bmatrix}
\]

\end_inset

 with square nonsingular 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{G}_{2}$
\end_inset

, where 
\begin_inset Formula $\mathbf{U}$
\end_inset

 is a unimodular matrix that can be separated to 
\begin_inset Formula $\mathbf{U}=\begin{bmatrix}\mathbf{U}_{L} & \mathbf{U}_{R}\end{bmatrix}$
\end_inset


\end_layout

\begin_layout Lemma
and separate it to 
\begin_inset Formula $\mathbf{F}=\begin{bmatrix}\mathbf{F}_{U}\\
\mathbf{F}_{D}
\end{bmatrix}$
\end_inset

.
 Let 
\begin_inset Formula $\mathbf{U}$
\end_inset

 be a unimodular matrix that transforms 
\begin_inset Formula $\mathbf{F}_{U}$
\end_inset

 to 
\begin_inset Formula $\left[\mathbf{G}_{1},0\right]$
\end_inset

 with a column basis 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

.
 Then 
\begin_inset Formula 
\[
\mathbf{F}\mathbf{U}=\begin{bmatrix}\mathbf{G}_{1} & 0\\
* & \mathbf{G}_{2}
\end{bmatrix}
\]

\end_inset

with square nonsingular 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{G}_{2}$
\end_inset

.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
If we separate 
\begin_inset Formula $\mathbf{F}$
\end_inset

 to 
\begin_inset Formula $\mathbf{F}=\begin{bmatrix}\mathbf{F}_{U}\\
\mathbf{F}_{D}
\end{bmatrix}$
\end_inset

, each
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
 with 
\begin_inset Formula $n/2$
\end_inset

 rows and
\end_layout

\end_inset

 has full-rank as 
\begin_inset Formula $\mathbf{F}$
\end_inset

 is assumed to be nonsingular, and also separate 
\begin_inset Formula $\mathbf{U}$
\end_inset

 to 
\begin_inset Formula $\mathbf{U}=\begin{bmatrix}\mathbf{U}_{L} & \mathbf{U}_{R}\end{bmatrix}$
\end_inset

,
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
 each with 
\begin_inset Formula $n/2$
\end_inset

 columns
\end_layout

\end_inset

 where the column dimension of 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

 matches the row dimension of 
\begin_inset Formula $\mathbf{F}_{U}$
\end_inset

, then 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula 
\[
\mathbf{F}\mathbf{U}=\begin{bmatrix}\mathbf{F}_{U}\\
\mathbf{F}_{D}
\end{bmatrix}\begin{bmatrix}\mathbf{U}_{L} & \mathbf{U}_{R}\end{bmatrix}=\mathbf{G}=\begin{bmatrix}\mathbf{G}_{1} & 0\\
* & \mathbf{G}_{2}
\end{bmatrix}.
\]

\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 Notice that the matrix 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

 is nonsingular and is therefore just a column basis of 
\begin_inset Formula $\mathbf{F}_{U}$
\end_inset

, and can be efficiently computed using 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:colBasis"

\end_inset

.
 To compute 
\begin_inset Formula $\mathbf{G}_{2}=\mathbf{F}_{D}\mathbf{U}_{R}$
\end_inset

, notice that the matrix 
\begin_inset Formula $\mathbf{U}_{R}$
\end_inset

 is a right kernel basis
\series bold
 
\series default
of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, which makes the top right block of 
\begin_inset Formula $\mathbf{G}$
\end_inset

 zero.
 As we have seen from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:unimodular_kernel_columnBasis"

\end_inset

, the kernel basis 
\begin_inset Formula $\mathbf{U}_{R}$
\end_inset

 can be replaced by any other kernel basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 to give another unimodular matrix that also works.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
In fact, this kernel basis can be replaced by any other kernel basis of
 
\begin_inset Formula $\mathbf{F}$
\end_inset

 to give another unimodular matrix.
\end_layout

\begin_layout Lemma
Let 
\begin_inset Formula $\mathbf{U}=\left[\mathbf{U}_{l},\mathbf{U}_{r}\right]$
\end_inset

 be a unimodular matrix such that 
\begin_inset Formula $\mathbf{F}\mathbf{U}=\left[\mathbf{F}\mathbf{U}_{l},\mathbf{F}\mathbf{U}_{r}\right]=\left[\mathbf{F}\mathbf{U}_{l},0\right]$
\end_inset

 so that 
\begin_inset Formula $\mathbf{F}\mathbf{U}_{l}$
\end_inset

 is a GCD of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 and 
\begin_inset Formula $\mathbf{U}_{r}$
\end_inset

 is a kernel basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 Then for any other kernel basis 
\begin_inset Formula $\mathbf{N}$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, the matrix 
\begin_inset Formula $\left[\mathbf{U}_{l},\mathbf{N}\right]$
\end_inset

 is also unimodular.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $\mathbf{V}=\mathbf{U}^{-1}$
\end_inset

 and 
\begin_inset Formula $\begin{bmatrix}\mathbf{V}_{u}\\
\mathbf{V}_{d}
\end{bmatrix}=\mathbf{V}$
\end_inset

, where the row dimension of 
\begin_inset Formula $\mathbf{V}_{u}$
\end_inset

 matches the column dimension of 
\begin_inset Formula $\mathbf{U}_{l}$
\end_inset

.
 Then
\begin_inset Formula 
\[
\mathbf{V}\left[\mathbf{U}_{l},\mathbf{N}\right]=\begin{bmatrix}\mathbf{V}_{u}\\
\mathbf{V}_{d}
\end{bmatrix}\begin{bmatrix}\mathbf{U}_{l}, & \mathbf{N}\end{bmatrix}=\begin{bmatrix}I & 0\\
0 & \mathbf{A}
\end{bmatrix}.
\]

\end_inset

 Note that 
\begin_inset Formula $\mathbf{V}_{u}\mathbf{N}=0$
\end_inset

 since 
\begin_inset Formula $\mathbf{V}_{u}\mathbf{U}_{r}=0$
\end_inset

 and 
\begin_inset Formula $\mathbf{V}_{u}\mathbf{N}=\mathbf{V}_{u}\mathbf{U}_{r}\mathbf{C}=0$
\end_inset

 for some unimodular matrix 
\begin_inset Formula $\mathbf{C}$
\end_inset

, as the two kernel bases 
\begin_inset Formula $\mathbf{U}_{r}$
\end_inset

 and 
\begin_inset Formula $\mathbf{N}$
\end_inset

 are unimodularly equivalent.
 Also, since 
\begin_inset Formula $\mathbf{N}$
\end_inset

 has full column rank and is unimodularly transformed to 
\begin_inset Formula $\mathbf{V}\mathbf{N}=\begin{bmatrix}0\\
\mathbf{A}
\end{bmatrix}$
\end_inset

 with a square part 
\begin_inset Formula $\mathbf{A}=\mathbf{V}_{d}\mathbf{N}$
\end_inset

, the matrix 
\begin_inset Formula $\mathbf{A}$
\end_inset

 must be nonsingular and hence is a GCRD of 
\begin_inset Formula $\mathbf{N}$
\end_inset

.
 In fact, 
\begin_inset Formula $\mathbf{A}$
\end_inset

 must be unimodular.
 If not, then 
\begin_inset Formula $\mathbf{A}^{-1}$
\end_inset

 is not a polynomial matrix, hence there exists some column of 
\begin_inset Formula $\mathbf{N}'=\mathbf{N}\mathbf{A}^{-1}$
\end_inset

 cannot be generated by 
\begin_inset Formula $\mathbf{N}$
\end_inset

, even though the columns of 
\begin_inset Formula $\mathbf{N}'$
\end_inset

 are also in the kernel of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, contradicting with the fact that 
\begin_inset Formula $\mathbf{N}$
\end_inset

 is a kernel basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
\end_layout

\end_inset

 
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:oneStepHermiteDiagonal"

\end_inset

Given a polynomial matrix 
\begin_inset Formula $\mathbf{F}=\begin{bmatrix}\mathbf{F}_{U}\\
\mathbf{F}_{D}
\end{bmatrix}$
\end_inset

.
 If 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

 is a column basis of 
\begin_inset Formula $\mathbf{F}_{U}$
\end_inset

 and 
\begin_inset Formula $\mathbf{N}$
\end_inset

 is a kernel basis of 
\begin_inset Formula $\mathbf{F}_{U}$
\end_inset

, then there is a unimodular matrix 
\begin_inset Formula $\mathbf{U}=\left[*,\mathbf{N}\right]$
\end_inset

 such that 
\begin_inset Formula 
\[
\mathbf{F}\mathbf{U}=\begin{bmatrix}\mathbf{G}_{1}\\
* & \mathbf{G}_{2}
\end{bmatrix},
\]

\end_inset

 where 
\begin_inset Formula $\mathbf{G}_{2}=\mathbf{F}_{D}\mathbf{N}$
\end_inset

.
 
\begin_inset Note Note
status collapsed

\begin_layout Lemma
can be unimodularly transformed to 
\begin_inset Formula 
\[
\mathbf{F}\mathbf{U}=\begin{bmatrix}\mathbf{G}_{1} & 0\\
* & \mathbf{G}_{2}
\end{bmatrix}
\]

\end_inset

 with square nonsingular 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{G}_{2}$
\end_inset

, where 
\begin_inset Formula $\mathbf{U}$
\end_inset

 is a unimodular matrix that can be separated to 
\begin_inset Formula $\mathbf{U}=\begin{bmatrix}\mathbf{U}_{L} & \mathbf{U}_{R}\end{bmatrix}$
\end_inset


\end_layout

\begin_layout Lemma
and separate it to 
\begin_inset Formula $\mathbf{F}=\begin{bmatrix}\mathbf{F}_{U}\\
\mathbf{F}_{D}
\end{bmatrix}$
\end_inset

.
 Let 
\begin_inset Formula $\mathbf{U}$
\end_inset

 be a unimodular matrix that transforms 
\begin_inset Formula $\mathbf{F}_{U}$
\end_inset

 to 
\begin_inset Formula $\left[\mathbf{G}_{1},0\right]$
\end_inset

 with a column basis 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

.
 Then 
\begin_inset Formula 
\[
\mathbf{F}\mathbf{U}=\begin{bmatrix}\mathbf{G}_{1} & 0\\
* & \mathbf{G}_{2}
\end{bmatrix}
\]

\end_inset

with square nonsingular 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{G}_{2}$
\end_inset

.
 
\end_layout

\end_inset

 If 
\begin_inset Formula $\mathbf{F}$
\end_inset

 is square nonsingular, then 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{G}_{2}$
\end_inset

 are also square nonsingular.
\end_layout

\begin_layout Standard
Note that we do not compute the blocks represented by the symbol 
\begin_inset Formula $*$
\end_inset

, which may have very large degrees and cannot be computed efficiently.
\end_layout

\begin_layout Standard
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:oneStepHermiteDiagonal"

\end_inset

 allows us to compute 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{G}_{2}$
\end_inset

 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:step1HermiteDiagonal"

\end_inset


\end_layout

\end_inset

independently without computing the unimodular matrix.
 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

 can be computed using the method from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:Matrix-GCD"

\end_inset

, while the kernel basis computation from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:NullspaceBasis"

\end_inset

 can be used to compute a kernel basis 
\begin_inset Formula $\mathbf{N}_{1}$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}_{U}$
\end_inset

, which can then be used to compute 
\begin_inset Formula $\mathbf{G}_{2}=\mathbf{F}_{D}\mathbf{N}_{1}$
\end_inset

.
\end_layout

\begin_layout Standard
After 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{G}_{2}$
\end_inset

 are computed, we can repeat the same process on each of these two matrices,
 which now have lower dimensions
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
 
\begin_inset Formula $n/2$
\end_inset


\end_layout

\end_inset

, until the dimension becomes one.
 This procedure of computing the diagonal entries gives 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:hermiteDiagonal"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "algorithmHermiteDiagonalEntries.lyx"

\end_inset


\end_layout

\begin_layout Section
Computational Cost
\end_layout

\begin_layout Standard
Let us look at the computational cost of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:hermiteDiagonal"

\end_inset

.
 
\end_layout

\begin_layout Theorem
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:hermiteDiagonal"

\end_inset

 costs 
\begin_inset Formula $O^{\sim}\left(n^{\omega-1}\xi\right)$
\end_inset

 field operations to compute the diagonal entries for the Hermite normal
 form of a nonsingular matrix 
\begin_inset Formula $\mathbf{F}\in\mathbb{K}\left[x\right]^{n\times n}$
\end_inset

, where 
\begin_inset Formula $\xi$
\end_inset

 is the sum of the column degrees 
\end_layout

\begin_layout Proof
The three main operations are computing a column basis of 
\begin_inset Formula $\mathbf{F}_{U}$
\end_inset

, computing a kernel basis 
\begin_inset Formula $\mathbf{N}$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}_{U}$
\end_inset

, and the matrix multiplication 
\begin_inset Formula $\mathbf{F}_{D}\mathbf{N}$
\end_inset

.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
A column basis 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}_{U}$
\end_inset

 can be computed with a cost of 
\begin_inset Formula $O^{\sim}\left(n^{\omega-1}\xi\right).$
\end_inset

 The column degrees of the computed column basis 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

 are also bounded by the 
\begin_inset Formula $n/2$
\end_inset

 largest column degrees of 
\begin_inset Formula $\mathbf{F}_{U}$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Proof
For the column basis computation, by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "thm:columnBasisCost1"

\end_inset

 we know that a column basis 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}_{U}$
\end_inset

 can be computed with a cost of 
\begin_inset Formula $O^{\sim}\left(n^{\omega-1}\xi\right).$
\end_inset

 By 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:colBasisDegreeBoundByInputDegrees"

\end_inset

 the column degrees of the computed column basis 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

 are also bounded by the original column degrees 
\begin_inset Formula $\vec{s}$
\end_inset

.
\end_layout

\begin_layout Proof
For the kernel basis computation, it also costs 
\begin_inset Formula $O^{\sim}\left(n^{\omega-1}\xi\right)$
\end_inset

 to compute a 
\begin_inset Formula $\vec{s}$
\end_inset

-minimal kernel basis 
\begin_inset Formula $\mathbf{N}$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}_{U}$
\end_inset

 from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "thm:costLowColDimension"

\end_inset

.
 The sum of the 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees of the output kernel basis 
\begin_inset Formula $\mathbf{N}$
\end_inset

 is bounded by 
\begin_inset Formula $\xi$
\end_inset

 by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "thm:boundOfSumOfShiftedDegreesOfKernelBasis"

\end_inset

.
\end_layout

\begin_layout Proof
Finally for the matrix multiplication 
\begin_inset Formula $\mathbf{F}_{D}\mathbf{N}$
\end_inset

, since the sum of the column degrees of 
\begin_inset Formula $\mathbf{F}_{D}$
\end_inset

 and the sum of the 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees of 
\begin_inset Formula $\mathbf{N}$
\end_inset

 are both bounded by 
\begin_inset Formula $\xi$
\end_inset

, 
\begin_inset CommandInset ref
LatexCommand formatted
reference "thm:multiplyUnbalancedMatrices"

\end_inset

 applies and the multiplication can be done with a cost of 
\begin_inset Formula $O^{\sim}\left(n^{\omega-1}\xi\right)$
\end_inset

.
\end_layout

\begin_layout Proof
Now if we let the cost of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:hermiteDiagonal"

\end_inset

 be 
\begin_inset Formula $g(n,\xi)$
\end_inset

 for a input matrix of dimension 
\begin_inset Formula $n$
\end_inset

 with 
\begin_inset Formula $\xi$
\end_inset

 bounding the sum of its column degrees, then we have the recurrence relation
\begin_inset Formula 
\[
g(n,\xi)\in O^{\sim}(n^{\omega-1}\xi)+g(\left\lceil n/2\right\rceil ,\xi)+g(\left\lfloor n/2\right\rfloor ,\xi),
\]

\end_inset

 which is the same as in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "thm:inverseCost"

\end_inset

 for computing the matrix inverse.
 Therefore, we also get 
\begin_inset Formula $g(n,\xi)=O^{\sim}(n^{\omega-1}\xi)$
\end_inset

 as in the inverse computation.
\end_layout

\begin_layout Corollary
The determinant of a nonsingular matrix 
\begin_inset Formula $\mathbf{F}\in\mathbb{K}\left[x\right]^{n\times n}$
\end_inset

 can be computed with a cost of 
\begin_inset Formula $O^{\sim}(n^{\omega-1}\xi)$
\end_inset

 field operations, where 
\begin_inset Formula $\xi$
\end_inset

 is the minimum of the sum of the column degrees and the sum of the row
 degrees of the input matrix.
\end_layout

\begin_layout Proof
Just use 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:hermiteDiagonal"

\end_inset

 to compute the diagonal entries of the Hermite normal form of either 
\begin_inset Formula $\mathbf{F}$
\end_inset

 or 
\begin_inset Formula $\mathbf{F}^{T}$
\end_inset

, and then multiply the diagonal entries.
\end_layout

\end_body
\end_document
