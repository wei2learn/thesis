#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass report
\use_default_options true
\master weiThesis.lyx
\begin_modules
theorems-ams
theorems-chap
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine natbib_authoryear
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "chap:Matrix-GCD"

\end_inset

Column Basis
\end_layout

\begin_layout Standard
Column bases are fundamental constructions in polynomial matrix algebra.
 As an example, when the row dimension is one (i.e.
 
\begin_inset Formula $m=1$
\end_inset

), then finding a column basis coincides with finding a greatest common
 divisor (GCD) of all the polynomials in the matrix.
 Similarly, the nonzero columns of column reduced forms, Popov normal forms,
 and Hermite normal forms are all column bases satisfying additional degree
 constraints.
 A column reduced form gives a special column basis whose column degrees
 are the smallest possible, while Popov and Hermite forms are special column
 reduced or shifted column reduced forms satisfying additional conditions
 that make them unique.
 Efficient column basis computation immediately leads to fast computation
 for such core procedures as determining matrix GCDs 
\begin_inset CommandInset citation
LatexCommand cite
key "BL2000"

\end_inset

, column reduced forms 
\begin_inset CommandInset citation
LatexCommand cite
key "BVP:1988"

\end_inset

 and Popov forms 
\begin_inset CommandInset citation
LatexCommand cite
key "villard96"

\end_inset

 of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 with any dimension and rank.
 Column basis computation 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%in this paper 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

also provides a deterministic alternative to randomized lattice compression
 
\begin_inset CommandInset citation
LatexCommand cite
key "li:2006,storjohann-villard:2005"

\end_inset

.
\end_layout

\begin_layout Standard
While column bases are produced by column reduced, Popov and Hermite forms
 and considerable work has been done on computing such forms, for example
 
\begin_inset CommandInset citation
LatexCommand cite
key "bcl:2006,beelen:1988,Giorgi2003,GSSV2012,sarkar2011,SS2011"

\end_inset

.
 However most of these existing algorithms require that the input matrices
 be square nonsingular and so start with existing column bases.
 It is however pointed out in 
\begin_inset CommandInset citation
LatexCommand cite
key "sarkar2011,SS2011"

\end_inset

 that randomization can be used to relax the square nonsingular requirement.
\end_layout

\begin_layout Standard
In this chapter, we consider the problem of computing a column basis of
 an input matrix 
\begin_inset Formula $\mathbf{F}\in\mathbb{K}\left[x\right]^{m\times n}$
\end_inset

 with 
\begin_inset Formula $n\ge m$
\end_inset

 and column degrees 
\begin_inset Formula $\vec{s}$
\end_inset

.
 we give a fast, deterministic algorithm for the computation of a column
 basis for 
\begin_inset Formula $\mathbf{F}$
\end_inset

 having complexity 
\begin_inset Formula $O^{\sim}\left(nm^{\omega-1}s\right)$
\end_inset

 field operations in 
\begin_inset Formula $\mathbb{K}$
\end_inset

 with 
\begin_inset Formula $s$
\end_inset

 being the average average column degree of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Recall that a column basis 
\begin_inset Formula $\mathbf{T}\in\mathbb{K}\left[x\right]^{m\times r}$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 is a full rank matrix that generates the same 
\begin_inset Formula $\mathbb{F}\left[x\right]$
\end_inset

-module as generated by the columns of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 
\end_layout

\end_inset

To compute a column basis, we know from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:unimodularlyReduceToColumnBasis"

\end_inset

 that any matrix polynomial 
\begin_inset Formula $\mathbf{F}\in\mathbb{K}\left[x\right]^{m\times n}$
\end_inset

 can be unimodularly transformed to a column basis by repeatedly working
 with the leading column coefficient matrices.
 However this method of computing a column basis can be expensive.
 Indeed one needs to work with up to 
\begin_inset Formula $\sum\vec{s}$
\end_inset

 such coefficient matrices, which could involve up to 
\begin_inset Formula $\sum\vec{s}$
\end_inset

 polynomial matrix multiplications.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\emph on
greatest
\emph default
 common left divisor of the input matrix 
\begin_inset Formula $\mathbf{F}$
\end_inset

, with 
\begin_inset Formula $\mathbf{T}$
\end_inset

 having full column rank.
 As in the dimension 1 polynomial case, it is the greatest in the sense
 that the remaining factor 
\begin_inset Formula $\mathbf{G}\in\mathbb{K}\left[x\right]^{r\times n}$
\end_inset

 satisfying 
\series bold

\begin_inset Formula $\mathbf{F}=\mathbf{T}\mathbf{G}$
\end_inset

 
\series default
has no other full column rank left factors except for the unimodular ones,
 and this just requires 
\begin_inset Formula $\mathbf{T}$
\end_inset

 to be a column basis that generates the columns of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Definition
Given 
\begin_inset Formula $\mathbf{F}\in\mathbb{K}\left[x\right]^{m\times n}$
\end_inset

.
 A 
\emph on
GCLD 
\emph default
(also called 
\emph on
column GCD
\emph default
 or a
\emph on
 left GCD
\emph default
) of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 is any full column rank 
\begin_inset Formula $\mathbf{T}\in\mathbb{K}\left[x\right]^{m\times r}$
\end_inset

 satisfying 
\begin_inset Formula 
\[
\mathbf{F}\mathbf{U}=\left[0,\mathbf{T}\right]
\]

\end_inset

 with a unimodular matrix 
\begin_inset Formula $\mathbf{U}\in\mathbb{K}\left[x\right]^{n\times n}$
\end_inset

.
 
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
If 
\begin_inset Formula $\mathbf{T}$
\end_inset

 is unimodular, we say 
\begin_inset Formula $\mathbf{F}$
\end_inset

 is 
\emph on
relatively column prime
\emph default
.
 
\end_layout

\end_inset

The 
\emph on
GCRD 
\emph default
(also called 
\emph on
right GCD 
\emph default
or row 
\emph on
GCD)
\emph default
 or 
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
, and 
\emph on
relatively row prime
\emph default
 are
\end_layout

\end_inset

 is defined in the same way.
\end_layout

\begin_layout Plain Layout
Note that the term column GCD means that the GCD is a factor of the columns,
 while left GCD means that the GCD is a left factor.
 Also note that this specializes to polynomial GCD when 
\begin_inset Formula $m=1$
\end_inset

.
 
\end_layout

\begin_layout Plain Layout
GCLDs is closely related to column reduced form.
 The non-zero columns of a column reduced form is also a GCLD, but a GCLD
 does not need to be column reduced and can have degree arbitrarily large.
\end_layout

\begin_layout Remark
A matrix GCLD is commonly defined using two polynomial matrices 
\begin_inset Formula $\mathbf{F}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{F}_{2}$
\end_inset

, with 
\begin_inset Formula $\mathbf{F}_{1}$
\end_inset

 required to be square nonsingular.
 A GCLD of 
\begin_inset Formula $\mathbf{F}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{F}_{2}$
\end_inset

 in this definition is then the same as a GCLD of 
\begin_inset Formula $\mathbf{F}=\left[\mathbf{F}_{1},\mathbf{F}_{2}\right]$
\end_inset

 in our definition.
 We believe that this commonly used definition is unnecessarily complicated
 with the separation of two matrices and unnecessarily restrictive with
 the requirement of a square nonsingular matrix.
 Our definition is simpler, more general and works for matrices of any dimension
s.
 
\end_layout

\end_inset

 Before discussing the efficient computation of column basis, it is useful
 to look at following relationship between column basis, kernel basis, and
 unimodular matrix.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:unimodular_kernel_columnBasis"

\end_inset

Given 
\begin_inset Formula $\mathbf{F}\in\mathbb{K}\left[x\right]^{m\times n}$
\end_inset

.
 If 
\begin_inset Formula $\mathbf{U}$
\end_inset

 is a unimodular matrix such that 
\begin_inset Formula $\mathbf{F}\mathbf{U}=\left[0,\mathbf{T}\right]$
\end_inset

 gives a full column rank 
\begin_inset Formula $\mathbf{T}$
\end_inset

, then 
\begin_inset Formula $\mathbf{U}$
\end_inset

 can be separated into two submatrices 
\begin_inset Formula $\mathbf{U}=\left[\mathbf{U}_{L},\mathbf{U}_{R}\right]$
\end_inset

, where 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

 is a kernel basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 and 
\begin_inset Formula $\mathbf{F}\mathbf{U}_{R}=\mathbf{T}$
\end_inset

 is a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 In addition, the kernel basis 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

 can be replaced by any other kernel basis 
\begin_inset Formula $\mathbf{N}$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 and still gives a unimodular matrix 
\begin_inset Formula $\left[\mathbf{N},\mathbf{U}_{R}\right]$
\end_inset

, which can also be used to unimodularly transform 
\begin_inset Formula $\mathbf{F}$
\end_inset

 to 
\begin_inset Formula $\left[0,\mathbf{T}\right]$
\end_inset

.
 
\end_layout

\begin_layout Proof
Note that 
\begin_inset Formula $\mathbf{T}$
\end_inset

 is a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:unimodularlyReduceToColumnBasis"

\end_inset

.
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
Note that 
\begin_inset Formula $\mathbf{T}$
\end_inset

 is a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:unimodularlyReduceToColumnBasis"

\end_inset

.
\end_layout

\end_inset

 It remains to show that 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

 is a kernel basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 Since 
\begin_inset Formula $\mathbf{F}\mathbf{U}_{L}=0$
\end_inset

, 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

 is generated by any kernel basis 
\begin_inset Formula $\mathbf{N}$
\end_inset

, that is, 
\begin_inset Formula $\mathbf{U}_{L}=\mathbf{N}\mathbf{C}$
\end_inset

 for some polynomial matrix 
\begin_inset Formula $\mathbf{C}$
\end_inset

.
 Let 
\begin_inset Formula $r$
\end_inset

 be the rank of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, which is also the column dimension of 
\begin_inset Formula $\mathbf{T}$
\end_inset

 and 
\begin_inset Formula $\mathbf{U}_{R}$
\end_inset

.
 Then both 
\begin_inset Formula $\mathbf{N}$
\end_inset

 and 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

 have column dimension 
\begin_inset Formula $n-r$
\end_inset

.
 Hence 
\begin_inset Formula $\mathbf{C}$
\end_inset

 is a square 
\begin_inset Formula $(n-r)\times(n-r)$
\end_inset

 matrix.
 Now the unimodular matrix 
\begin_inset Formula $\mathbf{U}$
\end_inset

 can be factored as 
\begin_inset Formula 
\[
\mathbf{U}=\left[\mathbf{N}\mathbf{C},\mathbf{U}_{R}\right]=\left[\mathbf{N},\mathbf{U}_{R}\right]\begin{bmatrix}\mathbf{C}\\
 & I
\end{bmatrix},
\]

\end_inset

 implying that both factors 
\begin_inset Formula $\left[\mathbf{N},\mathbf{U}_{R}\right]$
\end_inset

 and 
\begin_inset Formula $\begin{bmatrix}\mathbf{C}\\
 & I
\end{bmatrix}$
\end_inset

 are unimodular.
 Therefore, 
\begin_inset Formula $\mathbf{C}$
\end_inset

 is unimodular and 
\begin_inset Formula $\mathbf{U}_{L}=\mathbf{N}\mathbf{C}$
\end_inset

 is also a kernel basis.
 Notice that the unimodular matrix 
\begin_inset Formula $\left[\mathbf{N},\mathbf{U}_{R}\right]$
\end_inset

 also transforms 
\begin_inset Formula $\mathbf{F}$
\end_inset

 to 
\begin_inset Formula $\left[0,\mathbf{T}\right]$
\end_inset

.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Note that the column dimension of 
\begin_inset Formula $\mathbf{M}$
\end_inset

 matches that of 
\begin_inset Formula $\mathbf{T}$
\end_inset

.
 The right submatrix of 
\begin_inset Formula $\mathbf{U}$
\end_inset

 gives 
\begin_inset Formula $\mathbf{FM}=\mathbf{T}$
\end_inset

 by definition.
 To see that 
\begin_inset Formula $\mathbf{N}$
\end_inset

 is a kernel basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, we need to show that
\series bold
 
\series default

\begin_inset Formula $\mathbf{N}$
\end_inset

 generates any vector 
\begin_inset Formula $\mathbf{q}\in\mathbb{K}\left[x\right]^{n}$
\end_inset

 satisfying 
\begin_inset Formula $\mathbf{F}\mathbf{q}=0$
\end_inset

.
 Note that 
\begin_inset Formula $\mathbf{F}\mathbf{q}=\left[0,\mathbf{T}\right]\mathbf{U}^{-1}\mathbf{q}=0$
\end_inset

.
 Let 
\begin_inset Formula $\mathbf{a}=\begin{bmatrix}\mathbf{a}_{1}\\
\mathbf{a}_{2}
\end{bmatrix}=\mathbf{U}^{-1}\mathbf{q}\in\mathbb{K}\left[x\right]^{n}$
\end_inset

, with the dimensions of 
\begin_inset Formula $\mathbf{a}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{a}_{2}$
\end_inset

 matches the column dimensions of the blocks in 
\begin_inset Formula $\left[0,\mathbf{T}\right]$
\end_inset

, so 
\begin_inset Formula $\left[0,\mathbf{T}\right]\mathbf{a}=\left[0,\mathbf{T}\right]\begin{bmatrix}\mathbf{a}_{1}\\
\mathbf{a}_{2}
\end{bmatrix}=\begin{bmatrix}0\\
\mathbf{T}\mathbf{a}_{2}
\end{bmatrix}=\mathbf{F}\mathbf{q}=0$
\end_inset

.
 Note that 
\begin_inset Formula $\mathbf{a}_{2}$
\end_inset

 must be 0 since 
\begin_inset Formula $\mathbf{T}\mathbf{a}_{2}=0$
\end_inset

 and 
\begin_inset Formula $\mathbf{T}$
\end_inset

 has full column rank.
 So now we have 
\begin_inset Formula $\mathbf{q}=\mathbf{U}\mathbf{a}=\mathbf{N}\mathbf{a}_{1}$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:unimodular_kernel_columnBasis"

\end_inset

 gives the following result for a unimodular matrix and its inverse.
\end_layout

\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:unimodular_kernel_columnBasis2"

\end_inset

Let 
\begin_inset Formula $\mathbf{U}=\left[\mathbf{U}_{L},\mathbf{U}_{R}\right]$
\end_inset

 be any unimodular matrix with columns separated arbitrarily to 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

 and 
\begin_inset Formula $\mathbf{U}_{R}$
\end_inset

.
 Let its inverse 
\begin_inset Formula $\mathbf{V}=\begin{bmatrix}\mathbf{V}_{U}\\
\mathbf{V}_{D}
\end{bmatrix}$
\end_inset

, where the row dimension of 
\begin_inset Formula $\mathbf{V}_{U}$
\end_inset

 matches the column dimension of 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

.
 So we have 
\begin_inset Formula 
\[
\mathbf{V}\mathbf{U}=\begin{bmatrix}\mathbf{V}_{U}\\
\mathbf{V}_{D}
\end{bmatrix}\begin{bmatrix}\mathbf{U}_{L},\mathbf{U}_{R}\end{bmatrix}=\begin{bmatrix}\mathbf{V}_{U}\mathbf{U}_{L} & \mathbf{V}_{U}\mathbf{U}_{R}\\
\mathbf{V}_{D}\mathbf{U}_{L} & \mathbf{V}_{D}\mathbf{U}_{R}
\end{bmatrix}=\begin{bmatrix}I & 0\\
0 & I
\end{bmatrix}.
\]

\end_inset

Then 
\begin_inset Formula $\mathbf{V}_{U}\mathbf{U}_{L}=I$
\end_inset

 is a column basis of 
\begin_inset Formula $\mathbf{V}_{U}$
\end_inset

 and a row basis of 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

, while 
\begin_inset Formula $\mathbf{V}_{D}\mathbf{U}_{R}=I$
\end_inset

 is a column basis of 
\begin_inset Formula $\mathbf{V}_{D}$
\end_inset

 and a row basis of of 
\begin_inset Formula $\mathbf{U}_{R}$
\end_inset

.
 In addition, 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\mathbf{V}_{D}$
\end_inset

 and 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

 are kernel bases of each other, while 
\begin_inset Formula $\mathbf{V}_{U}$
\end_inset

 and 
\begin_inset Formula $\mathbf{U}_{R}$
\end_inset

 are kernel bases of each other.
\end_layout

\begin_layout Proof
This follows directly from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:unimodular_kernel_columnBasis"

\end_inset

, by taking 
\begin_inset Formula $\mathbf{F}$
\end_inset

 from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:unimodular_kernel_columnBasis"

\end_inset

 to be 
\begin_inset Formula $\mathbf{V}_{U}$
\end_inset

, 
\begin_inset Formula $\mathbf{V}_{D}$
\end_inset

, 
\begin_inset Formula $\mathbf{U}_{L}^{T}$
\end_inset

, and 
\begin_inset Formula $\mathbf{U}_{R}^{T}$
\end_inset

 here.
\end_layout

\begin_layout Standard
To compute a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, we use the following procedure.
 We first compute a right 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\begin_inset Formula $\vec{s}$
\end_inset

-minimal
\end_layout

\end_inset

 kernel basis 
\begin_inset Formula $\mathbf{N}$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 Then we compute a left 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\begin_inset Formula $-\vec{s}$
\end_inset

-minimal
\end_layout

\end_inset

 kernel basis 
\begin_inset Formula $\mathbf{G}$
\end_inset

 of 
\begin_inset Formula $\mathbf{N}$
\end_inset

.
 This matrix 
\begin_inset Formula $\mathbf{G}$
\end_inset

 is a right factor of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, that is, 
\begin_inset Formula $\mathbf{F}=\mathbf{T}\mathbf{G}$
\end_inset

 for some 
\begin_inset Formula $\mathbf{T}\in\mathbb{K}\left[x\right]^{m\times r}$
\end_inset

.
 Then we can compute the left factor 
\begin_inset Formula $\mathbf{T}$
\end_inset

, which is in fact a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:matrixGCD"

\end_inset

Given 
\begin_inset Formula $\mathbf{F}\in\mathbb{K}\left[x\right]^{m\times n}$
\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
 with 
\begin_inset Formula $n>m$
\end_inset


\end_layout

\end_inset


\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
 and has full row rank
\end_layout

\end_inset

.
 Let 
\begin_inset Formula $\mathbf{N}\in\mathbb{K}\left[x\right]^{n\times(n-r)}$
\end_inset

 be any right 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\begin_inset Formula $\vec{s}$
\end_inset

-minimal kernel
\end_layout

\end_inset

kernel basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, and 
\begin_inset Formula $\mathbf{G}\in\mathbb{K}\left[x\right]^{r\times n}$
\end_inset

 be any left 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\begin_inset Formula $-\vec{s}$
\end_inset

-minimal kernel
\end_layout

\end_inset

kernel basis of 
\begin_inset Formula $\mathbf{N}$
\end_inset

, where 
\begin_inset Formula $r$
\end_inset

 is the rank of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 Then 
\begin_inset Formula $\mathbf{F}=\mathbf{T}\mathbf{G}$
\end_inset

 for some 
\begin_inset Formula $\mathbf{T}\in\mathbb{K}\left[x\right]^{m\times r}$
\end_inset

 and 
\begin_inset Formula $\mathbf{T}$
\end_inset

 is a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
\end_layout

\begin_layout Proof
Let the matrix 
\begin_inset Formula $\mathbf{U}=\begin{bmatrix}\mathbf{U}_{L},\mathbf{U}_{R}\end{bmatrix}$
\end_inset

 from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:unimodular_kernel_columnBasis2"

\end_inset

 be a unimodular matrix that transforms 
\begin_inset Formula $\mathbf{F}$
\end_inset

 to a column basis 
\begin_inset Formula $\mathbf{B}\in\mathbb{K}\left[x\right]^{m\times r}$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, where 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

 is any right kernel basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 From 
\begin_inset Formula $\mathbf{F}\mathbf{U}=\left[0,\mathbf{B}\right]$
\end_inset

, we get
\series bold
 
\begin_inset Formula $\mathbf{F}=\left[0,\mathbf{B}\right]\mathbf{U}^{-1}=\mathbf{B}\left[0,I\right]\mathbf{V}=\mathbf{B}\mathbf{V}_{D}$
\end_inset


\series default
.
 Since 
\begin_inset Formula $\mathbf{V}_{D}$
\end_inset

 is a left kernel basis of
\series bold
 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset


\series default
 by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:unimodular_kernel_columnBasis2"

\end_inset

, any other left kernel basis 
\begin_inset Formula $\mathbf{G}$
\end_inset

 of 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

 is unimodularly equivalent to 
\begin_inset Formula $\mathbf{V}_{D}$
\end_inset

, that is, 
\begin_inset Formula $\mathbf{V}_{D}=\mathbf{W}\mathbf{G}$
\end_inset

 for some unimodular matrix 
\begin_inset Formula $\mathbf{W}$
\end_inset

.
 Now 
\begin_inset Formula $\mathbf{F}=\mathbf{B}\mathbf{W}\mathbf{G}$
\end_inset

, where 
\begin_inset Formula $\mathbf{BW}=\mathbf{T}$
\end_inset

 a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 since it is unimodularly equivalent to the column basis 
\begin_inset Formula $\mathbf{B}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
For simplicity, let us assume 
\begin_inset Formula $\mathbf{F}\in\mathbb{K}\left[x\right]^{m\times n}$
\end_inset

 with 
\begin_inset Formula $n>m$
\end_inset

 has full row rank, which can be achieved by determining its rank and then
 use compression
\begin_inset CommandInset citation
LatexCommand citep
key "storjohann-villard:2005"

\end_inset

.
 
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Lemma
A matrix 
\begin_inset Formula $\mathbf{F}\in\mathbb{K}\left[x\right]^{m\times n}$
\end_inset

 has unimodular column basis if and only if 
\begin_inset Formula $\mathbf{F}$
\end_inset

 is a left kernel basis of some matrix.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $\mathbf{U}=\left[\mathbf{U}_{L},\mathbf{U}_{R}\right]$
\end_inset

 be any unimodular matrix with columns separated arbitrarily to 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

 and 
\begin_inset Formula $\mathbf{U}_{R}$
\end_inset

.
 Let its inverse 
\begin_inset Formula $\mathbf{V}=\begin{bmatrix}\mathbf{V}_{U}\\
\mathbf{V}_{D}
\end{bmatrix}$
\end_inset

, where the row dimension of 
\begin_inset Formula $\mathbf{V}_{U}$
\end_inset

 matches the column dimension of 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

.
 Then 
\begin_inset Formula 
\[
\mathbf{V}\mathbf{U}=\begin{bmatrix}\mathbf{V}_{U}\\
\mathbf{V}_{D}
\end{bmatrix}\begin{bmatrix}\mathbf{U}_{L},\mathbf{U}_{R}\end{bmatrix}=\begin{bmatrix}\mathbf{V}_{U}\mathbf{U}_{L} & \mathbf{V}_{U}\mathbf{U}_{R}\\
\mathbf{V}_{D}\mathbf{U}_{L} & \mathbf{V}_{D}\mathbf{U}_{R}
\end{bmatrix}=\begin{bmatrix}I & 0\\
0 & I
\end{bmatrix}.
\]

\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:unimodular_kernel_columnBasis"

\end_inset

, we see that the column bases of 
\begin_inset Formula $\mathbf{V}_{U}$
\end_inset

 and 
\begin_inset Formula $\mathbf{V}_{D}$
\end_inset

, and the row bases of 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

 and
\series bold
 
\begin_inset Formula $\mathbf{U}_{R}$
\end_inset


\series default
 are identity matrices.
 In addition, 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\mathbf{V}_{D}$
\end_inset

 and 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

 are kernel bases of each other
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
, and similarly for 
\begin_inset Formula $\mathbf{V}_{U}$
\end_inset

 and 
\begin_inset Formula $\mathbf{U}_{R}$
\end_inset


\end_layout

\end_inset

.
\end_layout

\begin_layout Proof
Now we can let 
\begin_inset Formula $\mathbf{U}$
\end_inset

 be a unimodular matrix that transforms 
\begin_inset Formula $\mathbf{F}$
\end_inset

 to a column basis 
\begin_inset Formula $\mathbf{B}\in\mathbb{K}\left[x\right]^{m\times r}$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, with any right kernel basis
\series bold
 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

 
\series default
of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 in 
\begin_inset Formula $\mathbf{U}$
\end_inset

.
 From 
\begin_inset Formula $\mathbf{F}\mathbf{U}=\left[0,\mathbf{B}\right]$
\end_inset

, we get
\series bold
 
\begin_inset Formula $\mathbf{F}=\left[0,\mathbf{B}\right]\mathbf{U}^{-1}=\mathbf{B}\left[0,I\right]\mathbf{V}=\mathbf{B}\mathbf{V}_{D}$
\end_inset


\series default
.
 Since 
\begin_inset Formula $\mathbf{V}_{D}$
\end_inset

 is a left kernel basis of
\series bold
 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset


\series default
, any other left kernel basis 
\begin_inset Formula $\mathbf{G}$
\end_inset

 of 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

 is unimodularly equivalent to 
\begin_inset Formula $\mathbf{V}_{D}$
\end_inset

, that is, 
\begin_inset Formula $\mathbf{V}_{D}=\mathbf{W}\mathbf{G}$
\end_inset

 for some unimodular matrix 
\begin_inset Formula $\mathbf{W}$
\end_inset

.
 Therefore, 
\begin_inset Formula $\mathbf{F}=\mathbf{B}\mathbf{W}\mathbf{G}$
\end_inset

, where 
\begin_inset Formula $\mathbf{BW}$
\end_inset

 is a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
\end_layout

\begin_layout Proof
and 
\begin_inset Formula $\mathbf{V}_{D}\mathbf{U}=\left[0,I\right]$
\end_inset

, where 
\begin_inset Formula $\mathbf{T}$
\end_inset

 is a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, we get 
\begin_inset Formula $\mathbf{F}=\mathbf{T}\mathbf{V}_{D}$
\end_inset

.
\end_layout

\begin_layout Proof
Note that 
\begin_inset Formula $\mathbf{F}$
\end_inset

 is a left kernel basis of some matrix if and only if it is a left kernel
 basis of a right kernel basis 
\begin_inset Formula $\mathbf{N}$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:unimodularlyReduceToColumnBasis"

\end_inset

, the unimodular matrix 
\begin_inset Formula $\mathbf{U}$
\end_inset

 that transforms 
\begin_inset Formula $\mathbf{F}$
\end_inset

 to a column basis 
\begin_inset Formula $\mathbf{T}\in\mathbb{K}\left[x\right]^{m\times r}$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 can be separated to 
\begin_inset Formula $\mathbf{U}=\left[\mathbf{N},\mathbf{U}_{R}\right]$
\end_inset

.
 Then 
\begin_inset Formula $\mathbf{F}\mathbf{U}=\left[0,\mathbf{F}\mathbf{U}_{R}\right]=\left[0,\mathbf{T}\right]$
\end_inset

.
 Since 
\begin_inset Formula $\mathbf{T}$
\end_inset

 is a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, we have 
\begin_inset Formula $\mathbf{F}=\mathbf{T}\mathbf{G}$
\end_inset

 for some matrix 
\begin_inset Formula $\mathbf{G}\in\mathbb{K}\left[x\right]^{r\times n}$
\end_inset

.
 Now 
\begin_inset Formula $\mathbf{F}\mathbf{U}=\mathbf{T}\mathbf{G}\mathbf{U}=\mathbf{T}\left[0,\mathbf{G}\mathbf{U}_{R}\right]=\mathbf{T}\left[0,I\right]$
\end_inset

.
 Hence 
\begin_inset Formula $\mathbf{G}$
\end_inset

 has a identity column basis.
\end_layout

\begin_layout Proof
Now there exists a matrix 
\begin_inset Formula $\mathbf{A}$
\end_inset

 such that 
\begin_inset Formula 
\[
\begin{bmatrix}\mathbf{A}\\
\mathbf{F}
\end{bmatrix}\left[\mathbf{N},\mathbf{U}_{R}\right]=\begin{bmatrix}I\\
 & \mathbf{T}
\end{bmatrix}
\]

\end_inset


\end_layout

\begin_layout Proof
If 
\begin_inset Formula $\mathbf{F}$
\end_inset

 has a unimodular column basis, then 
\begin_inset Formula $\mathbf{F}\left[\mathbf{N},\mathbf{U}_{R}\right]=\left[0,\mathbf{T}\right]$
\end_inset

, then there is a matrix 
\begin_inset Formula $\mathbf{A}$
\end_inset

 such that 
\begin_inset Formula 
\[
\begin{bmatrix}\mathbf{A}\\
\mathbf{F}
\end{bmatrix}\left[\mathbf{N},\mathbf{U}_{R}\right]=\begin{bmatrix}I\\
 & \mathbf{T}
\end{bmatrix}
\]

\end_inset

 since 
\begin_inset Formula $\left[\mathbf{N},\mathbf{U}_{R}\right]$
\end_inset

 is unimodular.
\end_layout

\begin_layout Proof
From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:unimodularlyReduceToColumnBasis"

\end_inset

, the unimodular matrix 
\begin_inset Formula $\mathbf{U}$
\end_inset

 that transforms 
\begin_inset Formula $\mathbf{F}$
\end_inset

 to a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 can be separated to 
\begin_inset Formula $\mathbf{U}=\left[\mathbf{N},\mathbf{U}_{R}\right]$
\end_inset

, where 
\begin_inset Formula $\mathbf{N}$
\end_inset

 is any right kernel basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 Similarly, the unimodular matrix 
\begin_inset Formula $\mathbf{V}$
\end_inset

 that transforms 
\begin_inset Formula $\mathbf{N}$
\end_inset

 to a column basis of 
\begin_inset Formula $\mathbf{N}$
\end_inset

 can be separated to 
\begin_inset Formula $\mathbf{V}=\begin{bmatrix}\mathbf{V}_{U}\\
\mathbf{G}
\end{bmatrix}$
\end_inset

, where 
\begin_inset Formula $\mathbf{G}$
\end_inset

 is any left kernel basis of 
\begin_inset Formula $\mathbf{N}$
\end_inset

.
 Now the product 
\begin_inset Formula 
\[
\mathbf{V}\mathbf{U}=\begin{bmatrix}\mathbf{V}_{U}\mathbf{N} & \mathbf{V}_{U}\mathbf{U}_{R}\\
0 & \mathbf{G}\mathbf{U}_{R}
\end{bmatrix}
\]

\end_inset

 is unimodular, hence the block 
\begin_inset Formula $\mathbf{G}\mathbf{U}_{R}$
\end_inset

 is also unimodular.
 From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:unimodularlyReduceToColumnBasis"

\end_inset

, 
\begin_inset Formula $\mathbf{G}\mathbf{U}_{R}$
\end_inset

 is also a column basis of 
\begin_inset Formula $\mathbf{G}$
\end_inset

.
\end_layout

\begin_layout Proof
, and 
\begin_inset Formula $\mathbf{G}$
\end_inset

 be any left kernel basis of 
\begin_inset Formula $\mathbf{N}$
\end_inset

.
 Then the unimodular matrix 
\begin_inset Formula $\mathbf{V}$
\end_inset

 that transforms 
\begin_inset Formula $\mathbf{N}$
\end_inset

 to 
\end_layout

\begin_layout Proof
Then from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:unimodularlyReduceToColumnBasis"

\end_inset

 
\begin_inset Formula $\mathbf{F}\left[\mathbf{N},\mathbf{U}_{R}\right]=\left[0,\mathbf{T}\right]$
\end_inset

, where 
\begin_inset Formula $\left[\mathbf{N},\mathbf{U}_{R}\right]$
\end_inset

 is a unimodular matrix and 
\begin_inset Formula $\mathbf{T}$
\end_inset

 is a column basis.
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Proof
Let 
\begin_inset Formula $\mathbf{U}=\begin{bmatrix}\mathbf{N},\mathbf{U}_{R}\end{bmatrix}$
\end_inset

 be a unimodular matrix that transforms 
\begin_inset Formula $\mathbf{F}$
\end_inset

 to give a column basis as in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:unimodular_kernel_columnBasis"

\end_inset

.
 Similarly, let 
\begin_inset Formula $\mathbf{V}$
\end_inset

 be a unimodular matrix that transforms 
\begin_inset Formula $\mathbf{N}$
\end_inset

 to a row basis 
\begin_inset Formula $\mathbf{W}$
\end_inset

 of 
\begin_inset Formula $\mathbf{N}$
\end_inset

.
 That is, 
\begin_inset Formula $\mathbf{V}\mathbf{N}=\begin{bmatrix}\mathbf{W}\\
0
\end{bmatrix}$
\end_inset

.
 From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:unimodular_kernel_columnBasis"

\end_inset

, we know 
\begin_inset Formula $\mathbf{V}$
\end_inset

 can be separated to 
\begin_inset Formula $\begin{bmatrix}\mathbf{V}_{U}\\
\mathbf{G}
\end{bmatrix}$
\end_inset

 where 
\begin_inset Formula $\mathbf{G}$
\end_inset

 is any left kernel basis of 
\begin_inset Formula $\mathbf{U}_{L}$
\end_inset

.
 Since the rows of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 are in the left kernel of 
\begin_inset Formula $\mathbf{N}$
\end_inset

, they are generated by the rows of the left kernel basis 
\begin_inset Formula $\mathbf{G}$
\end_inset

.
 In other words, 
\begin_inset Formula $\mathbf{F}=\mathbf{T}\mathbf{G}$
\end_inset

 for some 
\begin_inset Formula $\mathbf{T}\in\mathbb{K}\left[x\right]^{m\times r}$
\end_inset

.
 Therefore, 
\begin_inset Formula $\mathbf{F}\mathbf{U}=\mathbf{T}\mathbf{G}\mathbf{U}=\left[0,\mathbf{T}\mathbf{G}\mathbf{U}_{R}\right]$
\end_inset

.
 To see that Now the product of two unimodular matrices 
\begin_inset Formula 
\[
\mathbf{V}\mathbf{U}=\begin{bmatrix}\mathbf{V}_{U}\\
\mathbf{G}
\end{bmatrix}\begin{bmatrix}\mathbf{N},\mathbf{U}_{R}\end{bmatrix}=\begin{bmatrix}\mathbf{V}_{U}\mathbf{N} & \mathbf{V}_{U}\mathbf{U}_{R}\\
0 & \mathbf{G}\mathbf{U}_{R}
\end{bmatrix}
\]

\end_inset

 is again unimodular.
 Therefore, 
\begin_inset Formula $\mathbf{F}\mathbf{U}=\mathbf{T}\mathbf{G}\mathbf{U}=\left[0,\mathbf{T}\mathbf{G}\mathbf{U}_{R}\right]$
\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula $\mathbf{T}=\mathbf{F}\mathbf{U}_{R}=\mathbf{A}\mathbf{G}\mathbf{U}_{R}$
\end_inset

.
 
\begin_inset Formula 
\[
\mathbf{V}\mathbf{U}_{L}=\begin{bmatrix}\mathbf{V}_{U}\\
\mathbf{V}_{D}
\end{bmatrix}\mathbf{U}_{L}=\begin{bmatrix}\mathbf{V}_{U}\mathbf{U}_{L}\\
0
\end{bmatrix},
\]

\end_inset

 Where 
\begin_inset Formula $\mathbf{V}$
\end_inset

 is separated to 
\begin_inset Formula $\begin{bmatrix}\mathbf{V}_{U}\\
\mathbf{V}_{L}
\end{bmatrix}$
\end_inset

 and where 
\end_layout

\begin_layout Proof
Let its inverse 
\begin_inset Formula $\mathbf{U}^{-1}=\mathbf{V}$
\end_inset

 be separated to 
\begin_inset Formula $\mathbf{V}=\begin{bmatrix}\mathbf{V}_{U}\\
\mathbf{V}_{D}
\end{bmatrix}$
\end_inset

, such that 
\begin_inset Formula 
\[
\mathbf{V}\mathbf{U}=\begin{bmatrix}\mathbf{V}_{U}\\
\mathbf{V}_{D}
\end{bmatrix}\begin{bmatrix}\mathbf{U}_{L},\mathbf{U}_{R}\end{bmatrix}=\begin{bmatrix}\mathbf{V}_{U}\mathbf{U}_{L} & \mathbf{V}_{U}\mathbf{U}_{R}\\
\mathbf{V}_{D}\mathbf{U}_{L} & \mathbf{V}_{D}\mathbf{U}_{R}
\end{bmatrix}=\begin{bmatrix}\mathbf{V}_{U}\mathbf{U}_{L} & 0\\
0 & \mathbf{V}_{D}\mathbf{U}_{R}
\end{bmatrix}=I.
\]

\end_inset

From 
\begin_inset Formula $\mathbf{F}\mathbf{U}_{L}$
\end_inset


\end_layout

\begin_layout Proof
To see that 
\begin_inset Formula $\mathbf{G}$
\end_inset

 is a right factor of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, notice that the rows of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 are in the left kernel of 
\begin_inset Formula $\mathbf{N}$
\end_inset

 and therefore generated by the kernel basis 
\begin_inset Formula $\mathbf{G}$
\end_inset

.
 It remains to show that 
\begin_inset Formula $\mathbf{T}$
\end_inset

 is a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
\end_layout

\begin_layout Proof
From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:unimodularlyReduceToColumnBasis"

\end_inset

, the unimodular matrix 
\begin_inset Formula $\mathbf{U}$
\end_inset

 that transforms 
\begin_inset Formula $\mathbf{F}$
\end_inset

 to a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 can be separated to 
\begin_inset Formula $\mathbf{U}=\left[\mathbf{N},\mathbf{U}_{R}\right]$
\end_inset

.
 Then 
\begin_inset Formula 
\begin{eqnarray}
\mathbf{F}\mathbf{U} & = & \mathbf{T}\mathbf{G}\left[\mathbf{N},\mathbf{U}_{R}\right]=\left[0,\mathbf{T}\mathbf{G}\mathbf{U}_{R}\right],\label{eq:columnReduction}
\end{eqnarray}

\end_inset

where that 
\begin_inset Formula $\mathbf{TG}\mathbf{U}_{R}$
\end_inset

 is a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 To show that 
\begin_inset Formula $\mathbf{T}$
\end_inset

 is a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, we just need to show that 
\begin_inset Formula $\mathbf{H}=\mathbf{G}\mathbf{U}_{R}\in\mathbb{K}\left[x\right]^{r\times r}$
\end_inset

 is unimodular.
 From Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:columnReduction"

\end_inset

, we get 
\begin_inset Formula $\mathbf{G}\mathbf{U}=\left[0,\mathbf{H}\right]$
\end_inset

, or 
\begin_inset Formula $\mathbf{G}=\mathbf{H}\left[0,I_{r}\right]\mathbf{U}^{-1}=\mathbf{H}\mathbf{V}_{D}$
\end_inset

 after rearranging, where 
\begin_inset Formula $\mathbf{V}_{d}=\left[0,I_{r}\right]\mathbf{U}^{-1}$
\end_inset

 is the submatrix of 
\begin_inset Formula $\mathbf{U}^{-1}$
\end_inset

 consists of its 
\begin_inset Formula $r$
\end_inset

 bottom rows.
 Since the kernel basis 
\begin_inset Formula $\mathbf{G}$
\end_inset

 of 
\begin_inset Formula $\mathbf{N}$
\end_inset

 is unimodularly equivalent to 
\begin_inset Formula $\mathbf{V}_{D}$
\end_inset

 if and only if 
\begin_inset Formula $\mathbf{V}_{D}$
\end_inset

 is also a left kernel basis of 
\begin_inset Formula $\mathbf{N}$
\end_inset

, it only remains to show that 
\begin_inset Formula $\mathbf{V}_{D}$
\end_inset

 is also a left kernel basis of 
\begin_inset Formula $\mathbf{N}$
\end_inset

.
\end_layout

\begin_layout Proof
So it only remains to show that 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\left[0,I\right]\mathbf{U}^{-1}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 is a left kernel basis of 
\begin_inset Formula $\mathbf{N}$
\end_inset

.
 Note 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
that 
\begin_inset Formula $\left[0,I\right]\mathbf{U}^{-1}$
\end_inset

 consists of the bottom rows of a unimodular matrix and is therefore full-rank.

\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 Since the column basis 
\begin_inset Formula $\mathbf{T}\mathbf{G}\mathbf{U}_{R}=\mathbf{T}\mathbf{H}$
\end_inset

 is full-rank, 
\begin_inset Formula $\mathbf{H}$
\end_inset

 must be nonsingular.

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
Now 
\begin_inset Formula $\mathbf{G}\mathbf{N}=\mathbf{H}\left[0,I\right]\mathbf{U}^{-1}\mathbf{N}=0$
\end_inset

 implies 
\begin_inset Formula $\left[0,I\right]\mathbf{U}^{-1}\mathbf{N}=0$
\end_inset

, that is, the rows of 
\begin_inset Formula $\left[0,I\right]\mathbf{U}^{-1}$
\end_inset

 are in the left kernel of 
\begin_inset Formula $\mathbf{N}$
\end_inset

.
 As a right factor of 
\begin_inset Formula $\mathbf{G}$
\end_inset

, 
\begin_inset Formula $\left[0,I\right]\mathbf{U}^{-1}$
\end_inset

 generates the rows of the left kernel basis 
\begin_inset Formula $\mathbf{G}$
\end_inset

 and therefore generates the left kernel of 
\begin_inset Formula $\mathbf{N}$
\end_inset

.
 Putting these together we have shown that 
\begin_inset Formula $\left[0,I\right]\mathbf{U}^{-1}$
\end_inset


\end_layout

\begin_layout Proof
and the rows of 
\begin_inset Formula $\mathbf{G}$
\end_inset

 are generated by the rows of 
\begin_inset Formula $\left[0,I\right]\mathbf{U}^{-1}$
\end_inset

.
 But since 
\begin_inset Formula $\mathbf{G}$
\end_inset

 is a left kernel basis of 
\begin_inset Formula $\mathbf{N}$
\end_inset

, its full-rank right factor 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\left[0,I\right]\mathbf{U}^{-1}$
\end_inset

 must also be a left kernel basis of 
\begin_inset Formula $\mathbf{N}$
\end_inset

, hence 
\begin_inset Formula $\mathbf{H}$
\end_inset

 must be unimodular.
 
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{G}$
\end_inset

 is a part of a unimodular matrix.
 Can add rows to 
\begin_inset Formula $\mathbf{G}$
\end_inset

 to complete a unimodular matrix.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:matrixGCD"

\end_inset

 outlines a procedure for computing a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 with three main steps.
 The first step is to compute a 
\begin_inset Formula $\left(\mathbf{F},\vec{s}\right)$
\end_inset

-kernel basis 
\begin_inset Formula $\mathbf{N}$
\end_inset

, which can be efficiently done using 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:minimalNullspaceBasis"

\end_inset

.
 However, we still need to work on the second step of computing a 
\begin_inset Formula $\left(\mathbf{N}^{T},-\vec{s}\right)$
\end_inset

-kernel basis 
\begin_inset Formula $\mathbf{G}^{T}$
\end_inset

 and the third step of computing the column basis 
\begin_inset Formula $\mathbf{T}$
\end_inset

 from 
\begin_inset Formula $\mathbf{F}$
\end_inset

 and 
\begin_inset Formula $\mathbf{G}$
\end_inset

.
 Note that while 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:matrixGCD"

\end_inset

 does not require the bases computed to be minimal, working with minimal
 bases keeps the degrees well-managed and helps to make the computation
 efficient.
\end_layout

\begin_layout Example
Let 
\begin_inset Formula 
\[
\mathbf{F}=\left[\begin{array}{cccc}
x^{2} & x^{2} & x+x^{2} & 1+x^{2}\\
1+x+x^{2} & x^{2} & 1+x^{2} & 1+x^{2}
\end{array}\right]~.
\]

\end_inset

Then the matrix 
\begin_inset Formula 
\[
\mathbf{N}=\left[\begin{array}{cc}
x & 1\\
1 & x\\
x & 1\\
0 & x
\end{array}\right]
\]

\end_inset

is a right kernel basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 and the matrix 
\begin_inset Formula 
\[
\mathbf{G}=\left[\begin{array}{cccc}
1 & 0 & 1 & 0\\
\noalign{\medskip}x & {x}^{2} & 0 & 1+{x}^{2}
\end{array}\right]
\]

\end_inset

is a left nulllspace basis of 
\begin_inset Formula $\mathbf{N}$
\end_inset

.
 Finally the matrix 
\begin_inset Formula 
\[
\mathbf{T}=\left[\begin{array}{cc}
x+x^{2} & 1\\
1+x^{2} & 1
\end{array}\right]
\]

\end_inset

satisfies 
\begin_inset Formula $\mathbf{F}=\mathbf{T}\mathbf{G}$
\end_inset

, and is a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:computeRightFactor"

\end_inset

Computing a Right Factor
\end_layout

\begin_layout Standard
Let us now look at the computation of a 
\begin_inset Formula $\left(\mathbf{N}^{T},-\vec{s}\right)$
\end_inset

-kernel basis 
\begin_inset Formula $\mathbf{G}^{T}$
\end_inset

.
 For this problem, 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:minimalNullspaceBasisWithRankProfile"

\end_inset

 does not work well directly, since the input matrix 
\begin_inset Formula $\mathbf{N}^{T}$
\end_inset

 has nonuniform row degrees and negative shift.
 Comparing to the earlier problem of computing a 
\begin_inset Formula $\left(\mathbf{F},\vec{s}\right)$
\end_inset

-kernel basis 
\begin_inset Formula $\mathbf{N}$
\end_inset

, it is interesting to note that the old output 
\begin_inset Formula $\mathbf{N}$
\end_inset

 now becomes the new input matrix 
\begin_inset Formula $\mathbf{N}^{T}$
\end_inset

, while the new output matrix 
\begin_inset Formula $\mathbf{G}$
\end_inset

 has size bounded by 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 In other words, the new input has degrees that matches the old output,
 while the new output has degrees bounded by the old input.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Note that in the new problem, the degree structure of the input is more
 complicated the the output.
 
\end_layout

\end_inset

It is therefore reasonable to expect that the new problem can be computed
 efficiently.
 However, we need to find some way to work with the more complicated input
 degree structure.
 On the other hand, the simpler output degree structure makes it easier
 to apply order basis computation to compute a 
\begin_inset Formula $\left(\mathbf{N}^{T},-\vec{s}\right)$
\end_inset

-kernel basis.
 
\end_layout

\begin_layout Standard
To see how order basis computations can be applied here, let us first extend
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:orderBasisContainsNullspaceBasis"

\end_inset

, which provides a relationship between order bases and kernel bases, to
 accommodate our situation here.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:orderbasisContainsNullspacebasisGeneralized"

\end_inset

Given a matrix 
\begin_inset Formula $\mathbf{A}\in\mathbb{K}\left[x\right]^{m\times n}$
\end_inset

 and a degree shift 
\begin_inset Formula $\vec{u}$
\end_inset

 with 
\begin_inset Formula $\rdeg_{\vec{u}}\mathbf{A}\le\vec{v}$
\end_inset

, or equivalently, 
\begin_inset Formula $\cdeg_{-\vec{v}}\mathbf{A}\le-\vec{u}$
\end_inset

.
 Let 
\begin_inset Formula $\mathbf{P}=\left[\mathbf{P}_{1},\mathbf{P}_{2}\right]$
\end_inset

 be any 
\begin_inset Formula $\left(\mathbf{A},\vec{v}+1,-\vec{u}\right)$
\end_inset

-basis and 
\begin_inset Formula $\mathbf{Q}=\left[\mathbf{Q}_{1},\mathbf{Q}_{2}\right]$
\end_inset

 be any 
\begin_inset Formula $(\mathbf{A},-\vec{u})$
\end_inset

-kernel basis, where 
\begin_inset Formula $\mathbf{P}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{Q}_{1}$
\end_inset

 contain all columns from 
\begin_inset Formula $\mathbf{P}$
\end_inset

 and 
\begin_inset Formula $\mathbf{Q}$
\end_inset

, respectively, whose 
\begin_inset Formula $-\vec{u}$
\end_inset

-column degrees are no more than 
\begin_inset Formula $0$
\end_inset

.
 Then 
\begin_inset Formula $\left[\mathbf{P}_{1},\mathbf{Q}_{2}\right]$
\end_inset

 is an 
\begin_inset Formula $(\mathbf{A},-\vec{u})$
\end_inset

-kernel basis, and 
\begin_inset Formula $\left[\mathbf{Q}_{1},\mathbf{P}_{2}\right]$
\end_inset

 is an 
\begin_inset Formula $\left(\mathbf{A},\vec{v}+1,-\vec{u}\right)$
\end_inset

-basis.
\end_layout

\begin_layout Proof
We know 
\begin_inset Formula $\cdeg_{-\vec{v}}\mathbf{A}\mathbf{P}_{1}\le\cdeg_{-\vec{u}}\mathbf{P}_{1}\le0$
\end_inset

, or equivalently, 
\begin_inset Formula $\rdeg\mathbf{A}\mathbf{P}_{1}\le\vec{v}$
\end_inset

, but it has order greater than 
\begin_inset Formula $\vec{v}$
\end_inset

, hence 
\begin_inset Formula $\mathbf{A}\mathbf{P}_{1}=0$
\end_inset

.
 The result then follows the same reasoning as in the proof of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:orderBasisContainsNullspaceBasis"

\end_inset

.
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
We know 
\begin_inset Formula $\cdeg\mathbf{P}_{1}^{T}\le\vec{u}$
\end_inset

 from 
\begin_inset Formula $\cdeg_{-\vec{u}}\mathbf{P}_{1}\le0$
\end_inset

, hence 
\begin_inset Formula $\cdeg\mathbf{P}_{1}^{T}\mathbf{A}^{T}\le\cdeg_{\vec{u}}\mathbf{A}^{T}$
\end_inset

 by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:boundOnDegreesOfFA"

\end_inset

.
 Now for each row 
\begin_inset Formula $\mathbf{a}_{i}$
\end_inset

 in 
\begin_inset Formula $\mathbf{A}$
\end_inset

 and its 
\begin_inset Formula $\vec{u}$
\end_inset

-column degree 
\begin_inset Formula $v_{i}$
\end_inset

, we have 
\begin_inset Formula 
\[
\rdeg\mathbf{a}_{i}\mathbf{P}_{1}=\cdeg\mathbf{P}_{1}^{T}\mathbf{a}_{i}^{T}\le\cdeg_{\vec{u}}\mathbf{a}_{i}^{T}=v_{i},
\]

\end_inset

 and 
\begin_inset Formula $\mathbf{a}_{i}\mathbf{P}_{1}\equiv0\mod x^{v_{i}+1}$
\end_inset

, hence 
\begin_inset Formula $\mathbf{A}\mathbf{P}_{1}=0$
\end_inset

.
 The result then follows the same reasoning as in the proof of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:orderBasisContainsNullspaceBasis"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Now with the help of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:orderbasisContainsNullspacebasisGeneralized"

\end_inset

, let us get back to our problem of computing a 
\begin_inset Formula $(\mathbf{F},\vec{s})$
\end_inset

-kernel basis.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
embedding the reversed 
\begin_inset Formula $\mathbf{F}$
\end_inset

 in an order basis of a kernel basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
\end_layout

\end_inset

 In fact, we just need to use a special case of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:orderbasisContainsNullspacebasisGeneralized"

\end_inset

, where all the elements of the kernel basis have shifted degrees bounded
 by 
\begin_inset Formula $0$
\end_inset

, making the partial kernel basis a complete kernel basis
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
, which follows from our requirement of using a shift 
\begin_inset Formula $\vec{s}\ge\cdeg\mathbf{F}$
\end_inset


\end_layout

\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:nullspaceBasisInOrderBasis"

\end_inset

Let 
\begin_inset Formula $\mathbf{N}$
\end_inset

 be a 
\begin_inset Formula $(\mathbf{F},\vec{s})$
\end_inset

-kernel basis with 
\begin_inset Formula $\cdeg_{\vec{s}}\mathbf{N}=\vec{b}$
\end_inset

.
 Let 
\begin_inset Formula $\mathbf{P}=\left[\mathbf{P}_{1},\mathbf{P}_{2}\right]$
\end_inset

 be a 
\begin_inset Formula $\left(\mathbf{N}^{T},\vec{b}+1,-\vec{s}\right)$
\end_inset

-basis, where 
\begin_inset Formula $\mathbf{P}_{1}$
\end_inset

 consists of all columns 
\begin_inset Formula $\mathbf{p}$
\end_inset

 with 
\begin_inset Formula $\cdeg_{-\vec{s}}\mathbf{p}\le0$
\end_inset

.
 
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
of 
\begin_inset Formula $\mathbf{P}$
\end_inset

 satisfying 
\begin_inset Formula $\mathbf{N}^{T}\mathbf{p}=0$
\end_inset

.
 
\end_layout

\end_inset

Then 
\begin_inset Formula $\mathbf{P}_{1}$
\end_inset

 is a 
\begin_inset Formula $(\mathbf{N}^{T},-\vec{s})$
\end_inset

-kernel basis.
 
\end_layout

\begin_layout Proof
Let the rank of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 be 
\begin_inset Formula $r$
\end_inset

, which is also the column dimension of any 
\begin_inset Formula $(\mathbf{N}^{T},-\vec{s})$
\end_inset

-kernel basis 
\begin_inset Formula $\mathbf{G}^{T}$
\end_inset

.
 Since both 
\begin_inset Formula $\mathbf{F}$
\end_inset

 and 
\begin_inset Formula $\mathbf{G}$
\end_inset

 are in the left kernel of 
\begin_inset Formula $\mathbf{N}$
\end_inset

, we know 
\begin_inset Formula $\mathbf{F}$
\end_inset

 is generated by 
\begin_inset Formula $\mathbf{G}$
\end_inset

, and the 
\begin_inset Formula $-\vec{s}$
\end_inset

-row degrees of 
\begin_inset Formula $\mathbf{G}$
\end_inset

 are bounded by the corresponding 
\begin_inset Formula $r$
\end_inset

 largest 
\begin_inset Formula $-\vec{s}$
\end_inset

-row degrees of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, which are in turn bounded by 
\begin_inset Formula $0$
\end_inset

 since 
\begin_inset Formula $\cdeg\mathbf{F}\le\vec{s}$
\end_inset

.
 Therefore, any 
\begin_inset Formula $(\mathbf{N}^{T},-\vec{s})$
\end_inset

-kernel basis 
\begin_inset Formula $\mathbf{G}^{T}$
\end_inset

 satisfies 
\begin_inset Formula $\cdeg_{-\vec{s}}\mathbf{G}^{T}\le0$
\end_inset

.
 The result now follows from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:orderbasisContainsNullspacebasisGeneralized"

\end_inset

.
\end_layout

\begin_layout Standard
We can use 
\begin_inset CommandInset ref
LatexCommand formatted
reference "thm:continueComputingNullspaceBasisByRows"

\end_inset

 to compute a 
\begin_inset Formula $\left(\mathbf{N}^{T},-\vec{s}\right)$
\end_inset

-kernel basis by rows.
 If we separate 
\begin_inset Formula $\mathbf{N}$
\end_inset

 to 
\begin_inset Formula $\mathbf{N}=\left[\mathbf{N}_{1},\mathbf{N}_{2}\right]$
\end_inset

 with 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees 
\begin_inset Formula $\vec{b}_{1}$
\end_inset

, 
\begin_inset Formula $\vec{b}_{2}$
\end_inset

 respectively, and first compute a 
\begin_inset Formula $\left(\mathbf{N}_{1}^{T},-\vec{s}\right)$
\end_inset

-kernel basis 
\begin_inset Formula $\mathbf{Q}_{1}$
\end_inset

 with 
\begin_inset Formula $-\vec{s}$
\end_inset

-column degrees 
\begin_inset Formula $-\vec{s}_{2}$
\end_inset

, and then compute a 
\begin_inset Formula $\left(\mathbf{N}_{2}^{T}\mathbf{Q}_{1},-\vec{s}_{2}\right)$
\end_inset

-kernel basis 
\begin_inset Formula $\mathbf{Q}_{2}$
\end_inset

, then 
\begin_inset Formula $\mathbf{Q}_{1}\mathbf{Q}_{2}$
\end_inset

 is a 
\begin_inset Formula $\left(\mathbf{N}^{T},-\vec{s}\right)$
\end_inset

-kernel basis.
 To compute kernel bases 
\begin_inset Formula $\mathbf{Q}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{Q}_{2}$
\end_inset

, we can use order basis computation.
 However, we need to make sure that the order bases we compute do contain
 these kernel bases.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
 We can use the 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees of 
\begin_inset Formula $\mathbf{N}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{N}_{2}$
\end_inset

 for the order in the order computation.
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:orderBasisContainsNullspaceBasis-1"

\end_inset

Let 
\begin_inset Formula $\vec{b}=\cdeg_{\vec{s}}\mathbf{N}$
\end_inset

.
 Let 
\begin_inset Formula $\mathbf{P}=\left[\mathbf{P}_{1},\mathbf{P}_{2}\right]$
\end_inset

 be any 
\begin_inset Formula $\left(\mathbf{N}^{T},\vec{b}+1,-\vec{s}\right)$
\end_inset

-basis, where 
\begin_inset Formula $\mathbf{P}_{1}$
\end_inset

 contains all columns from 
\begin_inset Formula $\mathbf{P}$
\end_inset

 whose 
\begin_inset Formula $-\vec{s}$
\end_inset

-column degrees no more than 
\begin_inset Formula $0$
\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
and 
\begin_inset Formula $\mathbf{G}^{T}$
\end_inset

 be any 
\begin_inset Formula $\left(\mathbf{N}^{T},-\vec{s}\right)$
\end_inset

-basis kernel basis
\end_layout

\end_inset

.
 Then 
\begin_inset Formula $\mathbf{P}_{1}$
\end_inset

 is a 
\begin_inset Formula $\left(\mathbf{N}^{T},-\vec{s}\right)$
\end_inset

-kernel basis.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $\mathbf{G}^{T}$
\end_inset

 be any 
\begin_inset Formula $\left(\mathbf{N}^{T},-\vec{s}\right)$
\end_inset

-kernel basis.
 First note that 
\begin_inset Formula $\mathbf{F}$
\end_inset

 has the same rank as 
\begin_inset Formula $\mathbf{G}$
\end_inset

 and is generated by the rows of 
\begin_inset Formula $\mathbf{G}$
\end_inset

, which is 
\begin_inset Formula $-\vec{s}$
\end_inset

-row reduced, hence 
\begin_inset Formula $\rdeg_{-\vec{s}}\mathbf{G}\le\rdeg_{-\vec{s}}\mathbf{F}$
\end_inset

, and 
\begin_inset Formula $\rdeg_{-\vec{s}}\mathbf{F}\le0$
\end_inset

 since 
\begin_inset Formula $\cdeg\mathbf{F}\le\vec{s}$
\end_inset

.
 This gives 
\begin_inset Formula $\rdeg_{-\vec{s}}\mathbf{G}\le0$
\end_inset

.
 
\end_layout

\begin_layout Proof
Now the proof is similar to 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:orderBasisContainsNullspaceBasis"

\end_inset

.
 Note that 
\begin_inset Formula $\cdeg_{-\vec{b}}\mathbf{N}^{T}\le-\vec{s}$
\end_inset

 by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:columnDegreesRowDegreesSymmetry"

\end_inset

.
 From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:productDegreeBound"

\end_inset

, any column 
\begin_inset Formula $\mathbf{p}$
\end_inset

 of 
\begin_inset Formula $\mathbf{P}_{1}$
\end_inset

 satisfies 
\begin_inset Formula $\cdeg_{-\vec{b}}\mathbf{N}^{T}\mathbf{p}\le\cdeg_{-\vec{s}}\mathbf{p}\le0$
\end_inset

, or equivalently, 
\begin_inset Formula $\rdeg\mathbf{N}^{T}\mathbf{p}\le\vec{b}$
\end_inset

.
 Combining this with the fact that 
\begin_inset Formula $\mathbf{p}$
\end_inset

 has order 
\begin_inset Formula $\vec{b}+1$
\end_inset

 we get 
\begin_inset Formula $\mathbf{N}^{T}\mathbf{p}=0$
\end_inset

.
 Thus 
\begin_inset Formula $\mathbf{P}_{1}$
\end_inset

 is generated by 
\begin_inset Formula $\mathbf{G}^{T}$
\end_inset

, that is, 
\begin_inset Formula $\mathbf{P}_{1}=\mathbf{G}^{T}\mathbf{U}$
\end_inset

 for some polynomial matrix 
\begin_inset Formula $\mathbf{U}$
\end_inset

.
 On the other hand, 
\begin_inset Formula $\mathbf{G}^{T}$
\end_inset

 has order 
\begin_inset Formula $\left(\mathbf{N}^{T},\vec{b}+1\right)$
\end_inset

 and 
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
is therefore generated by 
\begin_inset Formula $\mathbf{P}_{1}$
\end_inset

, i.e.
 
\end_layout

\end_inset

 therefore satisfies 
\begin_inset Formula $\mathbf{G}^{T}=\mathbf{P}_{1}\mathbf{V}$
\end_inset

 for some polynomial matrix 
\begin_inset Formula $\mathbf{V}$
\end_inset

.
 We now have 
\begin_inset Formula $\mathbf{P}_{1}=\mathbf{P}_{1}\mathbf{V}\mathbf{U}$
\end_inset

 and 
\begin_inset Formula $\mathbf{G}^{T}=\mathbf{G}^{T}\mathbf{U}\mathbf{V}$
\end_inset

, implying both 
\begin_inset Formula $\mathbf{U}$
\end_inset

 and 
\begin_inset Formula $\mathbf{V}$
\end_inset

 are unimodular.
 The result then follows from the unimodular equivalence of 
\begin_inset Formula $\mathbf{P}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{G}^{T}$
\end_inset

 and the fact that they are 
\begin_inset Formula $-\vec{s}$
\end_inset

-column reduced.
 
\begin_inset ERT
status open

\begin_layout Plain Layout

%reducedness of .
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:nullspaceBasisOfSubsetOfRowsContainedInOrderBasis"

\end_inset

Let 
\begin_inset Formula $\mathbf{N}$
\end_inset

 be partitioned as 
\begin_inset Formula $\mathbf{N}=\left[\mathbf{N}_{1},\mathbf{N}_{2}\right]$
\end_inset

, with 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees 
\begin_inset Formula $\vec{b}_{1}$
\end_inset

, 
\begin_inset Formula $\vec{b}_{2}$
\end_inset

 respectively.
 Then a 
\begin_inset Formula $\left(\mathbf{N}_{1}^{T},\vec{b}_{1}+1,-\vec{s}\right)$
\end_inset

-basis contains a 
\begin_inset Formula $\left(\mathbf{N}_{1}^{T},-\vec{s}\right)$
\end_inset

-kernel basis whose 
\begin_inset Formula $-\vec{s}$
\end_inset

-column degrees are bounded by 0.
 Let 
\begin_inset Formula $\mathbf{Q}_{1}$
\end_inset

 be this kernel basis, and 
\begin_inset Formula $-\vec{s}_{2}=\cdeg_{-\vec{s}}\mathbf{Q}_{1}$
\end_inset

.
 Then a 
\begin_inset Formula $\left(\mathbf{N}_{2}^{T}\mathbf{Q}_{1},\vec{b}_{2}+1,-\vec{s}_{2}\right)$
\end_inset

-basis contains a 
\begin_inset Formula $\left(\mathbf{N}_{2}^{T}\mathbf{Q}_{1},-\vec{s}_{2}\right)$
\end_inset

-kernel basis 
\begin_inset Formula $\mathbf{Q}_{2}$
\end_inset

 whose 
\begin_inset Formula $-\vec{s}$
\end_inset

-column degrees are bounded by 0.
 The product 
\begin_inset Formula $\mathbf{Q}_{1}\mathbf{Q}_{2}$
\end_inset

 is then a 
\begin_inset Formula $\left(\mathbf{N}^{T},-\vec{s}\right)$
\end_inset

-kernel basis.
\end_layout

\begin_layout Proof
To see that a 
\begin_inset Formula $\left(\mathbf{N}_{1}^{T},\vec{b}_{1}+1,-\vec{s}\right)$
\end_inset

-basis contains a 
\begin_inset Formula $\left(\mathbf{N}_{1}^{T},-\vec{s}\right)$
\end_inset

-kernel basis whose 
\begin_inset Formula $-\vec{s}$
\end_inset

-column degrees are bounded by 0, we just need to show that 
\begin_inset Formula $\cdeg_{-\vec{s}}\mathbf{\bar{Q}}_{1}\le0$
\end_inset

 for any 
\begin_inset Formula $\left(\mathbf{N}_{1}^{T},-\vec{s}\right)$
\end_inset

-kernel basis 
\begin_inset Formula $\mathbf{\bar{Q}}_{1}$
\end_inset

 and then apply 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:orderbasisContainsNullspacebasisGeneralized"

\end_inset

.
 Note that there exists a polynomial matrix 
\begin_inset Formula $\bar{\mathbf{Q}}_{2}$
\end_inset

 such that 
\begin_inset Formula $\mathbf{\bar{Q}}_{1}\mathbf{\bar{Q}}_{2}=\bar{\mathbf{G}}$
\end_inset

 for any 
\begin_inset Formula $\left(\mathbf{N}^{T},-\vec{s}\right)$
\end_inset

-kernel basis 
\begin_inset Formula $\bar{\mathbf{G}}$
\end_inset

, as 
\begin_inset Formula $\bar{\mathbf{G}}$
\end_inset

 satisfies 
\begin_inset Formula $\mathbf{N}_{1}^{T}\bar{\mathbf{G}}=0$
\end_inset

 and is therefore generated by the 
\begin_inset Formula $\left(\mathbf{N}_{1}^{T},-\vec{s}\right)$
\end_inset

-kernel basis 
\begin_inset Formula $\bar{\mathbf{Q}}_{1}$
\end_inset

.
 If 
\begin_inset Formula $\cdeg_{-\vec{s}}\mathbf{\bar{Q}}_{1}\nleq0$
\end_inset

, then 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:predictableDegree"

\end_inset

 forces 
\begin_inset Formula $\cdeg_{-\vec{s}}\left(\bar{\mathbf{Q}}_{1}\bar{\mathbf{Q}}_{2}\right)=\cdeg_{-\vec{s}}\bar{\mathbf{G}}\nleq0$
\end_inset

, a contradiction since we know from the proof of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:nullspaceBasisInOrderBasis"

\end_inset

 that 
\begin_inset Formula $\cdeg_{-\vec{s}}\mathbf{G}^{T}\le0$
\end_inset

.
 
\end_layout

\begin_layout Proof
As before, to see that a 
\begin_inset Formula $\left(\mathbf{N}_{2}^{T}\mathbf{Q}_{1},\vec{b}_{2}+1,-\vec{s}_{2}\right)$
\end_inset

-basis contains a 
\begin_inset Formula $\left(\mathbf{N}_{2}^{T}\mathbf{Q}_{1},-\vec{s}_{2}\right)$
\end_inset

-kernel basis whose 
\begin_inset Formula $-\vec{s}$
\end_inset

-column degrees are no more than 0, we can just show 
\begin_inset Formula $\cdeg_{-\vec{s}_{2}}\hat{\mathbf{Q}}_{2}\le0$
\end_inset

 for any 
\begin_inset Formula $\left(\mathbf{N}_{2}^{T}\mathbf{Q}_{1},-\vec{s}_{2}\right)$
\end_inset

-kernel basis 
\begin_inset Formula $\hat{\mathbf{Q}}_{2}$
\end_inset

 and then apply 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:orderbasisContainsNullspacebasisGeneralized"

\end_inset

.
 Since 
\begin_inset Formula $\cdeg_{\vec{s}}\mathbf{N}_{2}=\vec{b}_{2}$
\end_inset

, we have 
\begin_inset Formula $\rdeg_{-\vec{b}_{2}}\mathbf{N}_{2}\le-\vec{s}$
\end_inset

 or equivalently, 
\begin_inset Formula $\cdeg_{-\vec{b}_{2}}\mathbf{N}_{2}^{T}\le-\vec{s}.$
\end_inset

 Then combining this with 
\begin_inset Formula $\cdeg_{-\vec{s}}\mathbf{Q}_{1}=-\vec{s}_{2}$
\end_inset

 we get 
\begin_inset Formula $\cdeg_{-\vec{b}_{2}}\mathbf{N}_{2}^{T}\mathbf{Q}_{1}\le-\vec{s}_{2}$
\end_inset

 using 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:predictableDegree"

\end_inset

.
 Let 
\begin_inset Formula $\hat{\mathbf{G}}=\mathbf{Q}_{1}\hat{\mathbf{Q}}_{2}$
\end_inset

, which is now a 
\begin_inset Formula $\left(\mathbf{N}^{T},-\vec{s}\right)$
\end_inset

-kernel basis by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "thm:continueComputingNullspaceBasisByRows"

\end_inset

.
 Note that 
\begin_inset Formula $\cdeg_{-\vec{s}_{2}}\hat{\mathbf{Q}}_{2}=\cdeg_{-\vec{s}}\mathbf{Q}_{1}\hat{\mathbf{Q}}_{2}=\cdeg_{-\vec{s}}\hat{\mathbf{G}}\le0$
\end_inset

.
 
\end_layout

\begin_layout Standard
Now that we can correctly compute a 
\begin_inset Formula $\left(\mathbf{N}^{T},-\vec{s}\right)$
\end_inset

-kernel basis by rows with the help of order basis computation using 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:nullspaceBasisOfSubsetOfRowsContainedInOrderBasis"

\end_inset

, we need to look at how to do it efficiently.
 One major difficulty is that the order 
\begin_inset Formula $\vec{b}+1$
\end_inset

, or equivalently, the 
\begin_inset Formula $\vec{s}$
\end_inset

-row degrees of 
\begin_inset Formula $\mathbf{N}_{1}^{T}$
\end_inset

 are nonuniform and can have degree as large as 
\begin_inset Formula $\sum\vec{s}$
\end_inset

.
 To overcome this, we separate the rows of 
\begin_inset Formula $\mathbf{N}^{T}$
\end_inset

 into blocks according to their 
\begin_inset Formula $\vec{s}$
\end_inset

-row degrees, and then work with these blocks one by one successively using
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "thm:continueComputingNullspaceBasisByRows"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "algorithmNullspaceBasisReverse.lyx"

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $k$
\end_inset

 be the column dimension of 
\begin_inset Formula $\mathbf{N}$
\end_inset

 and 
\begin_inset Formula $\xi$
\end_inset

 be an upper bound of 
\begin_inset Formula $\sum\vec{s}$
\end_inset

.
 Since 
\begin_inset Formula $\sum\cdeg_{\vec{s}}\mathbf{N}=\sum\vec{b}\le\sum\vec{s}\le\xi$
\end_inset

, at most 
\begin_inset Formula $k/c$
\end_inset

 columns of 
\begin_inset Formula $\mathbf{N}$
\end_inset

 have 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees greater than or equal to 
\begin_inset Formula $c\xi/k$
\end_inset

 for any 
\begin_inset Formula $c\ge1$
\end_inset

.
 We assume without loss of generality that the rows of 
\begin_inset Formula $\mathbf{N}^{T}$
\end_inset

 are arranged in decreasing 
\begin_inset Formula $\vec{s}$
\end_inset

-row degrees.
 We divide 
\begin_inset Formula $\mathbf{N}^{T}$
\end_inset

 into 
\begin_inset Formula $\log k$
\end_inset

 row blocks according to the 
\begin_inset Formula $\vec{s}$
\end_inset

-row degrees of its rows, or equivalently, divide 
\begin_inset Formula $\mathbf{N}$
\end_inset

 to blocks of columns according to the 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees.
 Let 
\begin_inset Formula 
\[
\mathbf{N}=\left[\mathbf{N}_{1},\mathbf{N}_{2},\cdots,\mathbf{N}_{\log k-1},\mathbf{N}_{\log k}\right]
\]

\end_inset

with 
\begin_inset Formula $\mathbf{N}_{\log k},\mathbf{N}_{\log k-1},\dots,\mathbf{N}_{2},\mathbf{N}_{1}$
\end_inset

 having 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees in the range 
\begin_inset Formula $\left[0,2\xi/k\right]$
\end_inset

, 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $(2\xi/k,4\xi/k],$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 
\begin_inset Formula $(4\xi/k,8\xi/k],\ ...,$
\end_inset

 
\begin_inset Formula $(\xi/4,\xi/2],$
\end_inset

 
\begin_inset Formula $(\xi/2,\xi].$
\end_inset

 Let 
\begin_inset Formula 
\[
\vec{\sigma}_{i}=\left[\xi/2^{i-1}+1,\dots,\xi/2^{i-1}+1\right]
\]

\end_inset

 with the same dimension as the row dimension of 
\begin_inset Formula $\mathbf{N}_{i}$
\end_inset

.
 Let 
\begin_inset Formula 
\[
\vec{\sigma}=\left[\vec{\sigma}_{\log k},\vec{\sigma}_{\log k-1},\dots,\vec{\sigma}_{1}\right]
\]

\end_inset

 be the order in the order basis computation.
\end_layout

\begin_layout Standard
To further simply our task, we also make the order of our problem in each
 block uniform.
 Rather than of using 
\begin_inset Formula $\mathbf{N}^{T}$
\end_inset

 as the input matrix, we use 
\begin_inset Formula 
\begin{eqnarray*}
\hat{\mathbf{N}} & =\begin{bmatrix}\hat{\mathbf{N}}_{1}\\
\vdots\\
\hat{\mathbf{N}}_{\log k}
\end{bmatrix}= & x^{\vec{\sigma}-\vec{b}-1}\begin{bmatrix}\mathbf{N}_{1}^{T}\\
\vdots\\
\mathbf{N}_{\log k}^{T}
\end{bmatrix}=x^{\vec{\sigma}-\vec{b}-1}\mathbf{N}^{T}
\end{eqnarray*}

\end_inset

 instead, so that a 
\begin_inset Formula $\left(\hat{\mathbf{N}},\vec{\sigma},-\vec{s}\right)$
\end_inset

-basis is a 
\begin_inset Formula $\left(\mathbf{N}^{T},\vec{b}+1,-\vec{s}\right)$
\end_inset

-basis.
\end_layout

\begin_layout Standard
We are now ready to compute a 
\begin_inset Formula $\left(\mathbf{N}^{T},-\vec{s}\right)$
\end_inset

-kernel basis, which is done by a series of order basis computations that
 computes a series of kernel bases as follows.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\vec{s}_{1}=\vec{s}$
\end_inset

.
 First we compute an 
\begin_inset Formula $\left(\hat{\mathbf{N}}_{1},\vec{\sigma}_{1},-\vec{s}_{1}\right)$
\end_inset

-basis 
\begin_inset Formula $\mathbf{P}_{1}=\left[\mathbf{G}_{1},\mathbf{Q}_{1}\right]$
\end_inset

, where 
\begin_inset Formula $\mathbf{G}_{1}$
\end_inset

 is a 
\begin_inset Formula $\left(\hat{\mathbf{N}}_{1},-\vec{s}_{1}\right)$
\end_inset

-kernel basis
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
 with 
\begin_inset Formula $\cdeg_{-\vec{s}_{1}}\mathbf{N}_{1}\le0$
\end_inset


\end_layout

\end_inset

.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
 This computation can be done using 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:umab"

\end_inset

 with a cost of 
\begin_inset Formula $O^{\sim}\left(n^{\omega}d\right)$
\end_inset

, where 
\begin_inset Formula $d=\xi/n$
\end_inset

.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\tilde{\mathbf{G}}_{1}=\mathbf{G}_{1}$
\end_inset

.
 Let 
\begin_inset Formula $\vec{s}_{2}=-\cdeg_{-\vec{s}}\mathbf{G}_{1}$
\end_inset

.
 
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
Note that 
\begin_inset Formula $-\vec{s}_{1}\le-[\vec{s}_{2},\vec{t}_{2}]\le\left[0,\dots,0,1,\dots1\right]$
\end_inset

 component-wise, since 
\begin_inset Formula $\mathbf{P}_{1}$
\end_inset

 has lower order than any 
\begin_inset Formula $\left(\mathbf{M}^{T},\vec{b}+\left[1,\dots,1\right],-\vec{s}\right)$
\end_inset

-basis 
\begin_inset Formula $\mathbf{P}$
\end_inset

 hence generates 
\begin_inset Formula $\mathbf{P}$
\end_inset

.
 Therefore, 
\begin_inset Formula $\cdeg_{-\vec{s}}\mathbf{P}_{1}\le\cdeg_{-\vec{s}}\mathbf{P}\le\left[0,\dots,0,1,\dots1\right]$
\end_inset

.
 
\end_layout

\end_inset

 We then compute an 
\begin_inset Formula $\left(\hat{\mathbf{N}}_{2}\tilde{\mathbf{G}}_{1},\vec{\sigma}_{2},-\vec{s}_{2}\right)$
\end_inset

-basis 
\begin_inset Formula $\mathbf{P}_{2}=\left[\mathbf{G}_{2},\mathbf{Q}_{2}\right]$
\end_inset

 with 
\begin_inset Formula $\vec{s}_{3}=-\cdeg_{-\vec{s}_{2}}\mathbf{G}_{2}$
\end_inset

.
 Let 
\begin_inset Formula $\tilde{\mathbf{G}}_{2}=\tilde{\mathbf{G}}_{1}\mathbf{G}_{2}$
\end_inset

.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
To compute the product 
\begin_inset Formula $\hat{\mathbf{M}}_{2}\bar{\mathbf{P}}_{1}$
\end_inset

, since the 
\begin_inset Formula $\vec{s}$
\end_inset

-row degrees of 
\begin_inset Formula $\hat{\mathbf{N}}_{2}$
\end_inset

 are bounded by 
\begin_inset Formula $\xi/2$
\end_inset

 and the 
\begin_inset Formula $-\vec{s}$
\end_inset

-column degrees of 
\begin_inset Formula $\bar{\mathbf{P}}_{1}$
\end_inset

 are bounded by 
\begin_inset Formula $\left[1,\dots,1\right]$
\end_inset

, we can use 
\begin_inset CommandInset ref
LatexCommand formatted
reference "thm:multiplyUnbalancedMatrices"

\end_inset

 to multiply 
\begin_inset Formula $\bar{\mathbf{P}}_{1}^{T}$
\end_inset

, which has column degrees bounded by 
\begin_inset Formula $\vec{s}+\left[1,\dots,1\right]$
\end_inset

, and 
\begin_inset Formula $\hat{\mathbf{N}}_{2}^{T}$
\end_inset

 with the sum of its 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees bounded by 
\begin_inset Formula $\xi$
\end_inset

 with a cost of 
\begin_inset Formula $O^{\sim}\left(n^{\omega-1}\xi\right)$
\end_inset

.
 Now we can use 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:umab"

\end_inset

 to compute an 
\begin_inset Formula $\left(\hat{\mathbf{N}}_{2}\bar{\mathbf{P}}_{1},-\vec{t},\vec{\sigma}_{2}\right)$
\end_inset

-basis 
\begin_inset Formula $\bar{\mathbf{P}}_{2}$
\end_inset

 with a cost of 
\begin_inset Formula $O^{\sim}\left(n^{\omega-1}\xi\right)$
\end_inset


\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
, since the 
\begin_inset Formula $-\vec{s}$
\end_inset

-column degrees of 
\begin_inset Formula $\bar{\mathbf{P}}_{1}$
\end_inset

are bounded by that of 
\begin_inset Formula $\bar{\mathbf{P}}$
\end_inset

 (since the columns of 
\begin_inset Formula $\bar{\mathbf{P}}$
\end_inset

 are generated by 
\begin_inset Formula $\bar{\mathbf{P}}_{1}$
\end_inset

), which in turn are bounded by
\begin_inset Formula $\left[1,\dots,1\right]$
\end_inset


\end_layout

\end_inset

.
\end_layout

\end_inset

 
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
Let 
\begin_inset Formula $\mathbf{R}_{1}=\left[\mathbf{N}_{1}\mathbf{Q}_{2},\mathbf{Q}_{1}\right]$
\end_inset

 and 
\begin_inset Formula $\mathbf{R}_{1}^{r}=\revCol\left(\mathbf{R}_{1},-\vec{s},\cdeg_{-\vec{s}}\mathbf{R}_{1}\right)$
\end_inset

.
 Then from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:unimodularComputationByRows"

\end_inset

 we know 
\begin_inset Formula $\left[\mathbf{F}^{T},\mathbf{R}_{1}^{r}\right]$
\end_inset

 is a unimodular matrix.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Continuing this process, at step 
\begin_inset Formula $i$
\end_inset

 we compute an 
\begin_inset Formula $\left(\hat{\mathbf{N}}_{i}\tilde{\mathbf{G}}_{i-1},\vec{\sigma}_{i},-\vec{s}_{i}\right)$
\end_inset

-basis 
\begin_inset Formula $\mathbf{P}_{i}=\left[\mathbf{G}_{i},\mathbf{Q}_{i}\right]$
\end_inset

.
 Let 
\begin_inset Formula $\tilde{\mathbf{G}}_{i}=\prod_{j=1}^{i}\mathbf{G}_{i}=\tilde{\mathbf{G}}_{i-1}\mathbf{G}_{i}$
\end_inset

.
 Note that 
\begin_inset Formula $\tilde{\mathbf{G}}_{\log k}$
\end_inset

 is a 
\begin_inset Formula $\left(\mathbf{N}^{T},-\vec{s}\right)$
\end_inset

-kernel basis.
 
\end_layout

\begin_layout Standard
This process of computing a 
\begin_inset Formula $\left(\mathbf{N}^{T},-\vec{s}\right)$
\end_inset

-kernel basis gives 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:minimalNullspaceBasisReverse"

\end_inset

.
\end_layout

\begin_layout Standard
Now let us check the cost of this algorithm.
 The cost is dominated by the order basis computation and the multiplications
 
\begin_inset Formula $\hat{\mathbf{N}}_{i}\tilde{\mathbf{G}}_{i-1}$
\end_inset

 and 
\begin_inset Formula $\tilde{\mathbf{G}}_{i-1}\mathbf{G}_{i}$
\end_inset

.
 Let 
\begin_inset Formula $s=\xi/n$
\end_inset

.
\end_layout

\begin_layout Lemma
An 
\begin_inset Formula $\left(\hat{\mathbf{N}}_{i}\tilde{\mathbf{G}}_{i-1},\vec{\sigma}_{i},-\vec{s}_{i}\right)$
\end_inset

-basis can be computed with a cost of 
\begin_inset Formula $O^{\sim}\left(n^{\omega}s\right)$
\end_inset

.
\end_layout

\begin_layout Proof
Note that 
\begin_inset Formula $\mathbf{N}_{i}$
\end_inset

 has less than 
\begin_inset Formula $2^{i}$
\end_inset

 columns.
 Otherwise, 
\begin_inset Formula 
\[
\sum\cdeg_{\vec{s}}\mathbf{N}_{i}>2^{i}\xi/2^{i}=\xi,
\]

\end_inset

contradicting with 
\begin_inset Formula 
\[
\sum\cdeg_{\vec{s}}\mathbf{N}=\sum\vec{b}\le\sum\vec{s}\le\xi.
\]

\end_inset

It follows that 
\begin_inset Formula $\hat{\mathbf{N}}_{i}$
\end_inset

, and therefore 
\begin_inset Formula $\hat{\mathbf{N}}_{i}\tilde{\mathbf{G}}_{i-1}$
\end_inset

, also have less than 
\begin_inset Formula $2^{i}$
\end_inset

 rows.
 We also have 
\begin_inset Formula $\vec{\sigma}_{i}=\left[\xi/2^{i-1}+1,\dots,\xi/2^{i-1}+1\right]$
\end_inset

 with entries in 
\begin_inset Formula $\Theta\left(\xi/2^{i}\right)$
\end_inset

.
 Therefore, 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:umab"

\end_inset

 can be used with a cost of 
\begin_inset Formula $O^{\sim}\left(n^{\omega}s\right)$
\end_inset

 by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "thm:unbalancedOrderBasisCost"

\end_inset

.
\end_layout

\begin_layout Lemma
The multiplications 
\begin_inset Formula $\hat{\mathbf{N}}_{i}\tilde{\mathbf{G}}_{i-1}$
\end_inset

 can be done with a cost of 
\begin_inset Formula $O^{\sim}\left(n^{\omega}s\right)$
\end_inset

.
\end_layout

\begin_layout Proof
The dimension of 
\begin_inset Formula $\hat{\mathbf{N}}_{i}$
\end_inset

 is bounded by 
\begin_inset Formula $2^{i-1}\times n$
\end_inset

 and 
\begin_inset Formula $\sum\rdeg_{\vec{s}}\hat{\mathbf{N}}_{i}\le2^{i-1}\cdot\xi/2^{i-1}=\xi$
\end_inset

.
 We also have 
\begin_inset Formula $\cdeg_{-\vec{s}}\tilde{\mathbf{G}}_{i-1}\le0$
\end_inset

, or equivalently, 
\begin_inset Formula $\rdeg\tilde{\mathbf{G}}_{i-1}\le\vec{s}$
\end_inset

.
 We can now use 
\begin_inset CommandInset ref
LatexCommand formatted
reference "thm:multiplyUnbalancedMatrices"

\end_inset

 to multiply 
\begin_inset Formula $\tilde{\mathbf{G}}_{i-1}^{T}$
\end_inset

 and 
\begin_inset Formula $\hat{\mathbf{N}}_{i}^{T}$
\end_inset

 with a cost of 
\begin_inset Formula $O^{\sim}\left(n^{\omega}s\right)$
\end_inset

.
\end_layout

\begin_layout Lemma
The multiplication 
\begin_inset Formula $\tilde{\mathbf{G}}_{i-1}\mathbf{G}_{i}$
\end_inset

 can be done with a cost of 
\begin_inset Formula $O^{\sim}\left(n^{\omega}s\right)$
\end_inset

.
\end_layout

\begin_layout Proof
We know 
\begin_inset Formula $\cdeg_{-\vec{s}}\tilde{\mathbf{G}}_{i-1}=-\vec{s}_{i}$
\end_inset

, and 
\begin_inset Formula $\cdeg_{-\vec{s}_{i}}\mathbf{G}_{i}=-\vec{s}_{i+1}\le0.$
\end_inset

 In other words, 
\begin_inset Formula $\rdeg\mathbf{G}_{i}\le\vec{s}_{i}$
\end_inset

, and 
\begin_inset Formula $\rdeg_{\vec{s}_{i}}\tilde{\mathbf{G}}_{i-1}\le\vec{s}$
\end_inset

, hence we can again use 
\begin_inset CommandInset ref
LatexCommand formatted
reference "thm:multiplyUnbalancedMatrices"

\end_inset

 to multiply 
\begin_inset Formula $\mathbf{G}_{i}^{T}$
\end_inset

 and 
\begin_inset Formula $\tilde{\mathbf{G}}_{i-1}^{T}$
\end_inset

 with a cost of 
\begin_inset Formula $O^{\sim}\left(n^{\omega}s\right)$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:costKernelBasisReverse"

\end_inset

Given an input matrix 
\begin_inset Formula $\mathbf{M}\in\mathbb{K}\left[x\right]^{k\times n}$
\end_inset

, a shift 
\begin_inset Formula $\vec{s}\in\mathbb{Z}^{n}$
\end_inset

, and an upper bound 
\begin_inset Formula $\xi\in\mathbb{Z}$
\end_inset

 such that 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\sum\rdeg_{\vec{s}}\mathbf{M}\le\xi$
\end_inset

,
\end_layout

\begin_layout Itemize
\begin_inset Formula $\sum\vec{s}\le\xi$
\end_inset

,
\end_layout

\begin_layout Itemize
and any 
\begin_inset Formula $\left(\mathbf{M},-\vec{s}\right)$
\end_inset

-kernel basis having row degrees bounded by 
\begin_inset Formula $\vec{s}$
\end_inset

, or equivalently, having 
\begin_inset Formula $-\vec{s}$
\end_inset

-column degrees bounded by 0.
\end_layout

\end_deeper
\begin_layout Lemma
Then 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:minimalNullspaceBasisReverse"

\end_inset

 costs 
\begin_inset Formula $O^{\sim}\left(n^{\omega}s\right)$
\end_inset

 field operations to compute a 
\begin_inset Formula $\left(\mathbf{M},-\vec{s}\right)$
\end_inset

-kernel basis.
\end_layout

\begin_layout Lemma
Note that 
\begin_inset Formula $\xi$
\end_inset

 can be simply set to 
\begin_inset Formula $\sum\vec{s}$
\end_inset

.
\end_layout

\begin_layout Theorem
A right factor 
\begin_inset Formula $\mathbf{G}$
\end_inset

 satisfying 
\begin_inset Formula $\mathbf{F}=\mathbf{TG}$
\end_inset

 for a column basis 
\begin_inset Formula $\mathbf{T}$
\end_inset

 can be computed with a cost of 
\begin_inset Formula $O^{\sim}\left(n^{\omega}s\right)$
\end_inset

.
 
\end_layout

\begin_layout Section
Computing a Column Basis
\end_layout

\begin_layout Standard
With a right factor 
\begin_inset Formula $\mathbf{G}$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 computed, we are now ready to compute a column basis 
\begin_inset Formula $\mathbf{T}$
\end_inset

 using the equation 
\begin_inset Formula $\mathbf{F}=\mathbf{T}\mathbf{G}$
\end_inset

.
 To do so efficiently, the degree of 
\begin_inset Formula $\mathbf{T}$
\end_inset

 cannot be too big, which is indeed the case as shown by the following lemmas.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:colBasisdegreeBoundByRdegOfRightFactor"

\end_inset

The column degrees of 
\begin_inset Formula $\mathbf{T}$
\end_inset

 are bounded by the corresponding entries of 
\begin_inset Formula $\vec{t}=-\rdeg_{-\vec{s}}\mathbf{G}$
\end_inset

.
\end_layout

\begin_layout Proof
Since 
\begin_inset Formula $\mathbf{G}$
\end_inset

 is 
\begin_inset Formula $-\vec{s}$
\end_inset

-row reduced, and 
\begin_inset Formula $\rdeg_{-\vec{s}}\mathbf{F}\le0$
\end_inset

, by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:predictableDegree"

\end_inset

 
\begin_inset Formula $\rdeg_{-\vec{t}}\mathbf{T}\le0$
\end_inset

, or equivalently, 
\begin_inset Formula $\mathbf{T}$
\end_inset

 has column degrees bounded by 
\begin_inset Formula $\vec{t}$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:colBasisDegreeBoundByInputDegrees"

\end_inset

Let 
\begin_inset Formula $\vec{t}=-\rdeg_{-\vec{s}}\mathbf{G}$
\end_inset

, a vector with 
\begin_inset Formula $r$
\end_inset

 entries and bounds 
\begin_inset Formula $\cdeg\mathbf{T}$
\end_inset

 from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:colBasisdegreeBoundByRdegOfRightFactor"

\end_inset

.
 Let 
\begin_inset Formula $\vec{s}'$
\end_inset

 be the list of the 
\begin_inset Formula $r$
\end_inset

 largest entries of 
\begin_inset Formula $\vec{s}$
\end_inset

.
 Then 
\begin_inset Formula $\vec{t}\le\vec{s}'$
\end_inset

.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $\mathbf{G}'$
\end_inset

 be the 
\begin_inset Formula $-\vec{s}$
\end_inset

-row Popov form of 
\begin_inset Formula $\mathbf{G}$
\end_inset

, and the square matrix 
\begin_inset Formula $\mathbf{G}"$
\end_inset

 consists of only the columns of 
\begin_inset Formula $\mathbf{G}'$
\end_inset

 that contains pivot entries, and has the rows permuted so the pivots are
 in the diagonal.
 Let 
\begin_inset Formula $\vec{s}"$
\end_inset

 be the list of the entries in 
\begin_inset Formula $\vec{s}$
\end_inset

 that correspond to the columns of 
\begin_inset Formula $\mathbf{G}"$
\end_inset

 in 
\begin_inset Formula $\mathbf{G}'$
\end_inset

.
 Note that 
\begin_inset Formula $\rdeg_{-\vec{s}"}\mathbf{G}"=-\vec{t}"$
\end_inset

 is just a permutation of 
\begin_inset Formula $-\vec{t}$
\end_inset

 with the same entries.
 By the definition of shifted row degree, 
\begin_inset Formula $-\vec{t}"$
\end_inset

 is the sum of 
\begin_inset Formula $-\vec{s}"$
\end_inset

 and the list of the diagonal pivot degrees, which are nonnegative.
 Therefore, 
\begin_inset Formula $-\vec{t}"\ge-\vec{s}"$
\end_inset

.
 The result then follows as 
\begin_inset Formula $\vec{t}$
\end_inset

 is a permutation of 
\begin_inset Formula $\vec{t}"$
\end_inset

 and 
\begin_inset Formula $\vec{s}'$
\end_inset

 has the largest entries of 
\begin_inset Formula $\vec{s}$
\end_inset

.
\end_layout

\begin_layout Standard
With the bound on the column degrees of 
\begin_inset Formula $\mathbf{T}$
\end_inset

 determined, we are now ready to compute 
\begin_inset Formula $\mathbf{T}$
\end_inset

.
 This is done again using an order basis computation.
\end_layout

\begin_layout Lemma
Let 
\begin_inset Formula $\vec{t}'=\left[0,\dots,0,\vec{t}\right]\in\mathbb{Z}^{m+r}$
\end_inset

.
 Any 
\begin_inset Formula $\left(\left[\mathbf{F}^{T},\mathbf{G}^{T}\right],-\vec{t}'\right)$
\end_inset

-kernel basis has the form 
\begin_inset Formula $\begin{bmatrix}V\\
\bar{\mathbf{T}}
\end{bmatrix}$
\end_inset

, where 
\begin_inset Formula $V\in\mathbb{K}^{m\times m}$
\end_inset

 is a unimodular matrix and 
\begin_inset Formula $\left(\bar{\mathbf{T}}V^{-1}\right)^{T}$
\end_inset

 is a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
\end_layout

\begin_layout Proof
Note first that the matrix 
\begin_inset Formula $\begin{bmatrix}-I\\
\mathbf{T}^{T}
\end{bmatrix}$
\end_inset

 is a kernel basis of 
\begin_inset Formula $\left[\mathbf{F}^{T},\mathbf{G}^{T}\right]$
\end_inset

 and is therefore unimodularly equivalent to any other kernel basis.
 Hence any other kernel basis has the form 
\begin_inset Formula $\begin{bmatrix}-I\\
\mathbf{T}^{T}
\end{bmatrix}U=\begin{bmatrix}V\\
\bar{\mathbf{T}}
\end{bmatrix}$
\end_inset

, with 
\begin_inset Formula $U$
\end_inset

 and 
\begin_inset Formula $V=-U$
\end_inset

 unimodular.
 Thus 
\begin_inset Formula $\mathbf{T}=\left(\bar{\mathbf{T}}V^{-1}\right)^{T}$
\end_inset

.
 Also note that the 
\begin_inset Formula $-\vec{t}'$
\end_inset

-minimality forces the unimodular matrix 
\begin_inset Formula $V$
\end_inset

 in any 
\begin_inset Formula $\left(\left[\mathbf{F}^{T},\mathbf{G}^{T}\right],-\vec{t}'\right)$
\end_inset

-kernel basis to be degree 0, the same degree as 
\begin_inset Formula $I$
\end_inset

.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Finally, a 
\begin_inset Formula $\left(\left[\mathbf{F}^{T},\mathbf{G}^{T}\right],\vec{s}+\left[1,\dots,1\right],-\vec{t}'\right)$
\end_inset

-basis contain a 
\begin_inset Formula $\left(\left[\mathbf{F}^{T},\mathbf{G}^{T}\right],-\vec{t}'\right)$
\end_inset

-kernel basis because both 
\begin_inset Formula $\mathbf{F}^{T}$
\end_inset

 and 
\begin_inset Formula $\mathbf{G}^{T}\mathbf{T}^{T}$
\end_inset

 have row degrees bounded by 
\begin_inset Formula $\vec{s}$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
To compute a 
\begin_inset Formula $\left(\left[\mathbf{F}^{T},\mathbf{G}^{T}\right],-\vec{t}'\right)$
\end_inset

-kernel basis, we can again use order basis computation.
\end_layout

\begin_layout Lemma
Any 
\begin_inset Formula $\left(\left[\mathbf{F}^{T},\mathbf{G}^{T}\right],\vec{s}+1,-\vec{t}'\right)$
\end_inset

-basis contain a 
\begin_inset Formula $\left(\left[\mathbf{F}^{T},\mathbf{G}^{T}\right],-\vec{t}'\right)$
\end_inset

-kernel basis whose 
\begin_inset Formula $-\vec{t}'$
\end_inset

-row degrees are bounded by 0.
\end_layout

\begin_layout Proof
As before, 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:orderbasisContainsNullspacebasisGeneralized"

\end_inset

 can be used here.
 We just need to show that a 
\begin_inset Formula $\left(\left[\mathbf{F}^{T},\mathbf{G}^{T}\right],-\vec{t}'\right)$
\end_inset

-kernel basis has 
\begin_inset Formula $-\vec{t}'$
\end_inset

-row degrees no more than 0, which is true since 
\begin_inset Formula $\rdeg_{-\vec{t}'}\begin{bmatrix}I\\
\mathbf{T}^{T}
\end{bmatrix}\le0$
\end_inset

.
\end_layout

\begin_layout Example
Let 
\begin_inset Formula 
\[
\mathbf{F}=\left[\begin{array}{cccc}
x^{2} & x^{2} & x+x^{2} & 1+x^{2}\\
1+x+x^{2} & x^{2} & 1+x^{2} & 1+x^{2}
\end{array}\right]
\]

\end_inset

with 
\begin_inset Formula 
\[
\mathbf{G}=\left[\begin{array}{cccc}
1 & 0 & 1 & 0\\
\noalign{\medskip}x & {x}^{2} & 0 & 1+{x}^{2}
\end{array}\right]
\]

\end_inset

being a minimal left kernel basis of a right kernel basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 In order to compute the column basis 
\begin_inset Formula $\mathbf{T}$
\end_inset

 satisfying 
\begin_inset Formula $\mathbf{F}=\mathbf{T}\mathbf{G}$
\end_inset

, first we can determine 
\begin_inset Formula $\cdeg\mathbf{T}\le\vec{t}=\left[2,0\right]$
\end_inset

 from Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:colBasisdegreeBoundByRdegOfRightFactor"

\end_inset

.
 Then we can compute a 
\begin_inset Formula $\left[0,0,-\vec{t}\right]$
\end_inset

-minimal left kernel basis of 
\begin_inset Formula $\begin{bmatrix}\mathbf{F}\\
\mathbf{G}
\end{bmatrix}$
\end_inset

.
 The matrix 
\begin_inset Formula 
\[
\left[V,\bar{\mathbf{T}}\right]=\left[\begin{array}{cccc}
\noalign{\medskip}1 & 0 & x+{x}^{2} & 1\\
1 & 1 & 1+x & 0
\end{array}\right]
\]

\end_inset

is such a left kernel basis.
 A column basis can then be computed as by 
\begin_inset Formula 
\[
\mathbf{T}=V^{-1}\bar{\mathbf{T}}=\left[\begin{array}{cc}
x+x^{2} & 1\\
1+{x}^{2} & 1
\end{array}\right].
\]

\end_inset


\end_layout

\begin_layout Standard
In order to compute a 
\begin_inset Formula $\left(\left[\mathbf{F}^{T},\mathbf{G}^{T}\right],-\vec{t}^{*}\right)$
\end_inset

 kernel basis efficiently, we notice that we have the same type of problem
 as in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:computeRightFactor"

\end_inset

 and hence we can again use Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:minimalNullspaceBasisReverse"

\end_inset

.
 
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:costOfKernelBasisReversedForLeftFactor"

\end_inset

A 
\begin_inset Formula $\left(\left[\mathbf{F}^{T},\mathbf{G}^{T}\right],-\vec{t}^{*}\right)$
\end_inset

-kernel basis can be computed using 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:minimalNullspaceBasisReverse"

\end_inset

 with a cost of 
\begin_inset Formula $O^{\sim}\left(n^{\omega}s\right)$
\end_inset

, where 
\begin_inset Formula $s=\xi/n$
\end_inset

 is the average column degree of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 as before.
 
\end_layout

\begin_layout Proof
Just use the algorithm with input 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\left(\left[\mathbf{F}^{T},\mathbf{G}^{T}\right],\vec{t}^{*},\xi\right)$
\end_inset

.
 We can verify the conditions on the input are satisfied.
\end_layout

\begin_deeper
\begin_layout Itemize

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
To see that 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $\sum\rdeg_{\vec{t}^{*}}\left[\mathbf{F}^{T},\mathbf{G}^{T}\right]\le\xi$
\end_inset

, note that from 
\begin_inset Formula $\vec{t}=-\rdeg_{-\vec{s}}\mathbf{G}$
\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:columnDegreesRowDegreesSymmetry"

\end_inset

 
\begin_inset Formula $\cdeg_{\vec{t}}\mathbf{G}\le\vec{s}$
\end_inset

, or equivalently, 
\begin_inset Formula $\rdeg_{\vec{t}}\mathbf{G}^{T}\le\vec{s}$
\end_inset

.
 Since we also have 
\begin_inset Formula $\rdeg\mathbf{F}^{T}\le\vec{s}$
\end_inset

, it follows that 
\begin_inset Formula $\rdeg_{\vec{t}^{*}}\left[\mathbf{F}^{T},\mathbf{G}^{T}\right]\le\vec{s}$
\end_inset

.
 
\end_layout

\begin_layout Itemize
The second condition 
\begin_inset Formula $\sum\vec{t}^{*}\le\xi$
\end_inset

 follows from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:colBasisdegreeBoundByRdegOfRightFactor"

\end_inset

.
\end_layout

\begin_layout Itemize
The third condition holds since 
\begin_inset Formula $\begin{bmatrix}-I\\
\mathbf{T}^{T}
\end{bmatrix}$
\end_inset

 is a kernel basis with row degrees bounded by 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\vec{t}^{*}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
With a 
\begin_inset Formula $\left(\left[\mathbf{F}^{T},\mathbf{G}^{T}\right],-\vec{t}^{*}\right)$
\end_inset

-kernel basis 
\begin_inset Formula $\begin{bmatrix}V\\
\bar{\mathbf{T}}
\end{bmatrix}$
\end_inset

 computed, a column basis is then given by 
\begin_inset Formula $\mathbf{T}~=~\left(\bar{\mathbf{T}}V^{-1}\right)^{T}$
\end_inset

.
\end_layout

\begin_layout Standard
The complete algorithm for computing a column basis is then given in Algorithm
 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:colBasis"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "AlgorithmColumnBasis.lyx"

\end_inset

 
\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "thm:columnBasisCost1"

\end_inset

A column basis 
\begin_inset Formula $\mathbf{T}$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 can be computed with a cost of 
\begin_inset Formula $O^{\sim}\left(n^{\omega}s\right)$
\end_inset

, where 
\begin_inset Formula $s=\xi/n$
\end_inset

 is the average column degree of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 as before.
 
\end_layout

\begin_layout Proof
The cost is dominated by the cost of the three kernel basis computations
 in the algorithm.
 The first one is handled by the algorithm from 
\begin_inset CommandInset citation
LatexCommand cite
key "za2012"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand formatted
reference "thm:costGeneral"

\end_inset

, while the remaining two are handled by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:minimalNullspaceBasisReverse"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:costKernelBasisReverse"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:costOfKernelBasisReversedForLeftFactor"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
This can be done by computing a left 
\begin_inset Formula $\left[0,\dots,0,d,\dots,d\right]$
\end_inset

-minimal kernel basis 
\begin_inset Formula $\left[\mathbf{T}',V\right]$
\end_inset

 of 
\begin_inset Formula $\left[\mathbf{G}^{T},\mathbf{F}^{T}\right]^{T}$
\end_inset

, where 
\begin_inset Formula $d$
\end_inset

 is the degree of 
\begin_inset Formula $\mathbf{F},$
\end_inset

 
\begin_inset Formula $V$
\end_inset

 is a unimodular matrix and 
\begin_inset Formula $\mathbf{T}'$
\end_inset

 is a 
\begin_inset Formula $m\times m$
\end_inset

 matrix.
 Note that 
\begin_inset Formula $\left[\mathbf{T}',V\right]$
\end_inset

 has 
\begin_inset Formula $m$
\end_inset

 rows since the rank of 
\begin_inset Formula $\left[\mathbf{G}^{T},\mathbf{F}^{T}\right]^{T}$
\end_inset

 is 
\begin_inset Formula $m$
\end_inset

.
 Also note that since 
\begin_inset Formula $\left[\mathbf{T},I\right]$
\end_inset

 is a left kernel basis with 
\begin_inset Formula $\left[0,\dots,0,d,\dots,d\right]$
\end_inset

-row degrees bounded by 
\begin_inset Formula $d$
\end_inset

, the 
\begin_inset Formula $\left[0,\dots,0,d,\dots,d\right]$
\end_inset

-minimal kernel basis 
\begin_inset Formula $\left[\mathbf{T}',V\right]$
\end_inset

 must also has its 
\begin_inset Formula $\left[0,\dots,0,d,\dots,d\right]$
\end_inset

-row degrees bounded by 
\begin_inset Formula $d$
\end_inset

, hence the degree of 
\begin_inset Formula $V$
\end_inset

 must be 0.
 We can then easily compute 
\begin_inset Formula $\mathbf{T}=\mathbf{T}'V^{-1}$
\end_inset

.
 
\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:successiveColBasisComputation"

\end_inset

A Simple Improvement
\end_layout

\begin_layout Standard
When the input matrix 
\begin_inset Formula $\mathbf{F}$
\end_inset

 has column dimension much larger 
\begin_inset Formula $n$
\end_inset

 than the row dimension 
\begin_inset Formula $m$
\end_inset

, we can separate 
\begin_inset Formula $\mathbf{F}=\left[\mathbf{F}_{1},\mathbf{F}_{2},\dots,\mathbf{F}_{n/m}\right]$
\end_inset

 to 
\begin_inset Formula $n/m$
\end_inset

 blocks, each with dimension 
\begin_inset Formula $m\times m$
\end_inset

, assuming without loss of generality 
\begin_inset Formula $n$
\end_inset

 is a multiple of 
\begin_inset Formula $m$
\end_inset

, and the columns are arranged in increasing degrees.
 We then do a series of column basis computations.
 First we compute a column basis 
\begin_inset Formula $\mathbf{T}_{1}$
\end_inset

 of 
\begin_inset Formula $\left[\mathbf{F}_{1},\mathbf{F}_{2}\right]$
\end_inset

.
 Then compute a column basis 
\begin_inset Formula $\mathbf{T}_{2}$
\end_inset

 of 
\begin_inset Formula $\left[\mathbf{T}_{1},\mathbf{F}_{3}\right]$
\end_inset

.
 Repeating this process, at step 
\begin_inset Formula $i$
\end_inset

, we compute a column basis 
\begin_inset Formula $\mathbf{T}_{i}$
\end_inset

 of 
\begin_inset Formula $\left[\mathbf{T}_{i-1},\mathbf{F}_{i+1}\right]$
\end_inset

, until 
\begin_inset Formula $i=n/m-1$
\end_inset

, when a column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 is computed.
 
\end_layout

\begin_layout Lemma
At step 
\begin_inset Formula $i$
\end_inset

, computing a column basis 
\begin_inset Formula $\mathbf{T}_{i}$
\end_inset

 of 
\begin_inset Formula $\left[\mathbf{T}_{i-1},\mathbf{F}_{i+1}\right]$
\end_inset

 can be done with a cost of 
\begin_inset Formula $O^{\sim}\left(m^{\omega}(s_{i}+s_{i+1})/2\right)$
\end_inset

 field operations, where 
\begin_inset Formula $s_{i}=\left(\sum\cdeg\mathbf{F}_{i}\right)/m$
\end_inset

.
\end_layout

\begin_layout Proof
From Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:colBasisdegreeBoundByRdegOfRightFactor"

\end_inset

, the column basis 
\begin_inset Formula $\mathbf{T}_{i-1}$
\end_inset

 of 
\begin_inset Formula $\left[\mathbf{F}_{1},\dots,\mathbf{F}_{i}\right]$
\end_inset

 has column degrees bounded by the largest column degrees of 
\begin_inset Formula $\mathbf{F}_{i}$
\end_inset

, hence 
\begin_inset Formula $\sum\cdeg\mathbf{T}_{i-1}\le\sum\cdeg\mathbf{F}_{i}$
\end_inset

.
 The lemma then follows by combining this with the result from Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:columnBasisCost1"

\end_inset

 that a column basis 
\begin_inset Formula $\mathbf{T}_{i}$
\end_inset

 of 
\begin_inset Formula $\left[\mathbf{T}_{i-1},\mathbf{F}_{i+1}\right]$
\end_inset

 can be computed with a cost of 
\begin_inset Formula $O^{\sim}\left(m^{\omega}\bar{s}\right)$
\end_inset

, where 
\begin_inset Formula 
\[
\bar{s}=\left(\sum\cdeg\mathbf{T}_{i-1}+\sum\cdeg\mathbf{F}_{i+1}\right)/2m\le\left(s_{i}+s_{i+1}\right)/2.
\]

\end_inset

 
\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "thm:finalCollBasisCost"

\end_inset

A column basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 can be computed with a cost of 
\begin_inset Formula $O^{\sim}\left(m^{\omega}s\right)$
\end_inset

, where 
\begin_inset Formula $s=\left(\sum\cdeg\mathbf{F}\right)/n$
\end_inset

.
\end_layout

\begin_layout Proof
Summing up the cost of all the column basis computations, 
\begin_inset Formula 
\begin{eqnarray*}
 &  & \sum_{i=1}^{n/m-1}O^{\sim}\left(m^{\omega}\left(s_{i}+s_{i+1}\right)/2\right)\\
 &  & ~~~~~~~~~~~~~\subset O^{\sim}\left(m^{\omega}\left(\sum_{i=1}^{n/m}s_{i}\right)/(n/m)\right)\\
 &  & ~~~~~~~~~~~~~=O^{\sim}\left(m^{\omega}s\right).
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Remark
In this section, the computational efficiency is improved by reducing the
 original problem to about 
\begin_inset Formula $n/m$
\end_inset

 subproblems whose column dimensions are close to the row dimension 
\begin_inset Formula $m$
\end_inset

.
 This is done by successive column basis computations.
 Note that we can also reduce the column dimension by using successive order
 basis computations, and only do a column basis computation at the very
 last step.
 The computational complexity of using order basis computation to reduce
 the column dimension would remain the same, but in practice it maybe more
 efficient since order basis computations are simpler.
 
\end_layout

\begin_layout Section
Column Reduced Form and Popov Form
\end_layout

\begin_layout Standard
Let us now look how column basis computation leads to efficient deterministic
 algorithms for computing column reduced form and Popov form for matrices
 of any dimension.
 Since 
\begin_inset CommandInset citation
LatexCommand citet
key "SS2011"

\end_inset

 already provided algorithms to transform column reduced forms to Popov
 forms, we just need to consider the problem of computing column reduced
 form.
 In addition, since 
\begin_inset CommandInset citation
LatexCommand citet
key "GSSV2012"

\end_inset

 provided a deterministic algorithm for the column reduction of a square
 nonsingular input matrix, we just need to reduce the problem with general
 input matrix to the square nonsingular case.
 For this problem, we only give the cost in terms of the less refined matrix
 degree 
\begin_inset Formula $d$
\end_inset

 instead of the sum of the column degrees and aim for a cost of 
\begin_inset Formula $O^{\sim}\left(nm^{\omega-1}d\right)$
\end_inset

.
 So there is more room for improvement here.
\end_layout

\begin_layout Theorem
The column reduced form and Popov form of any matrix 
\begin_inset Formula $\mathbf{F}\in\mathbb{K}\left[x\right]^{m\times n}$
\end_inset

 can be computed deterministically with a cost of 
\begin_inset Formula $O^{\sim}\left(nm^{\omega-1}d\right).$
\end_inset


\end_layout

\begin_layout Proof
We may now assume that the input matrix 
\begin_inset Formula $\mathbf{F}$
\end_inset

 has full column rank, which can be done by a direct application of the
 column basis computation.
 It only remains to consider the case that the row dimension 
\begin_inset Formula $m$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 is higher than its column dimension 
\begin_inset Formula $n$
\end_inset

.
 Using the transposed version of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:matrixGCD"

\end_inset

, we can factor 
\begin_inset Formula $\mathbf{F}$
\end_inset

 as 
\begin_inset Formula $\mathbf{F}=\mathbf{G}\mathbf{T}$
\end_inset

, where 
\begin_inset Formula $\mathbf{G}$
\end_inset

 is column reduced and 
\begin_inset Formula $\mathbf{T}$
\end_inset

 is a square nonsingular row basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 Let 
\begin_inset Formula $\vec{t}=-\cdeg_{\left[-d,\dots,-d\right]}\mathbf{G}$
\end_inset

, or equivalently, 
\begin_inset Formula $\vec{t}=d-\cdeg\mathbf{G}$
\end_inset

, then from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:colBasisdegreeBoundByRdegOfRightFactor"

\end_inset

 we have 
\begin_inset Formula $\cdeg_{-\vec{t}}\mathbf{T}\le0$
\end_inset

, and from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:colBasisDegreeBoundByInputDegrees"

\end_inset

 we know that 
\begin_inset Formula $\vec{t}\le d$
\end_inset

.
 Now using 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:predictableColumnReducedness"

\end_inset

, a 
\begin_inset Formula $-\vec{t}$
\end_inset

-column reduced form 
\begin_inset Formula $\mathbf{T}'$
\end_inset

 of 
\begin_inset Formula $\mathbf{T}$
\end_inset

 makes 
\begin_inset Formula $\mathbf{G}\mathbf{T}'$
\end_inset

 a column reduced form of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 To compute a 
\begin_inset Formula $-\vec{t}$
\end_inset

-column reduced form 
\begin_inset Formula $\mathbf{T}'$
\end_inset

 of 
\begin_inset Formula $\mathbf{T}$
\end_inset

, we can just compute a column reduced form of 
\begin_inset Formula $x^{d-\vec{t}}\mathbf{T}$
\end_inset

, which is a square nonsingular matrix of degree 
\begin_inset Formula $d$
\end_inset

.
\end_layout

\begin_layout Example
To column reduce 
\begin_inset Formula 
\[
\mathbf{F}=\left[\begin{array}{cc}
{x}^{2} & 1+x+{x}^{2}\\
\noalign{\medskip}{x}^{2} & {x}^{2}\\
\noalign{\medskip}x+{x}^{2} & 1+{x}^{2}\\
\noalign{\medskip}1+{x}^{2} & 1+{x}^{2}
\end{array}\right],
\]

\end_inset

we factor 
\begin_inset Formula $\mathbf{F}$
\end_inset

 as 
\begin_inset Formula 
\[
\mathbf{F}=\mathbf{G}\mathbf{T}=\left[\begin{array}{cc}
1 & x\\
\noalign{\medskip}0 & {x}^{2}\\
\noalign{\medskip}1 & 0\\
\noalign{\medskip}0 & 1+{x}^{2}
\end{array}\right]\left[\begin{array}{cc}
x+{x}^{2} & 1+{x}^{2}\\
\noalign{\medskip}1 & 1
\end{array}\right]
\]

\end_inset

 as before with a column reduced 
\begin_inset Formula $\mathbf{G}$
\end_inset

.
 The column degrees of 
\begin_inset Formula $\mathbf{G}$
\end_inset

 
\begin_inset Formula $\cdeg\mathbf{G}=\left[0,2\right]$
\end_inset

.
 So we compute 
\begin_inset Formula $\left[0,2\right]$
\end_inset

-column reduced form 
\begin_inset Formula $\mathbf{T}'$
\end_inset

 of 
\begin_inset Formula $\mathbf{T}$
\end_inset

 
\begin_inset Formula 
\[
\mathbf{T}'=\left[\begin{array}{cc}
1+x & x+{x}^{2}\\
\noalign{\medskip}0 & 1
\end{array}\right].
\]

\end_inset

 Now 
\begin_inset Formula 
\[
\mathbf{G}\mathbf{T}'=\left[\begin{array}{cc}
1+x & {x}^{2}\\
\noalign{\medskip}0 & {x}^{2}\\
\noalign{\medskip}1+x & x+{x}^{2}\\
\noalign{\medskip}0 & 1+{x}^{2}
\end{array}\right]
\]

\end_inset

 is a column reduced form of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
\end_layout

\end_body
\end_document
