#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass report
\use_default_options true
\begin_modules
theorems-ams
theorems-chap
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine natbib_authoryear
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Applications
\end_layout

\begin_layout Standard
We describe several applications of nullspace basis.
\end_layout

\begin_layout Subsection
Linear System Solving
\end_layout

\begin_layout Subsection
Matrix inverse
\end_layout

\begin_layout Standard
In this section, we consider the problem of computing the inverse of a 
\begin_inset Formula $n\times n$
\end_inset

 matrix with degree 
\begin_inset Formula $d$
\end_inset

.
 
\begin_inset CommandInset citation
LatexCommand citet
key "jeannerod-villard:05"

\end_inset

 gave an algorithm for this problem.
 But their algorithm only works well on input matrices that are generic
 with dimension a power of 2.
 In the following, we show that their algorithm can be improved to handle
 any matrix with a cost of 
\begin_inset Formula $O^{\sim}\left(n^{3}d\right)$
\end_inset

 using new results from this thesis.
 In fact, our result is slightly more general.
 If 
\begin_inset Formula $\xi$
\end_inset

 is the minimum of the sum of the column degrees and the sum of the of the
 row degrees of the input matrix, then the inverse can be computed with
 
\begin_inset Formula $O^{\sim}\left(n^{2}\xi\right).$
\end_inset

 In the following, we assume without loss of generality that the sum of
 the column degrees is the minimum.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "algorithmInversion.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:matrixInverse"

\end_inset

 is an recursive version of the algorithm from 
\begin_inset CommandInset citation
LatexCommand citet
key "jeannerod-villard:05"

\end_inset

, except that we replace the nullspace basis computation at 
\begin_inset CommandInset ref
LatexCommand formatted
reference "line:nullspaceBasisComputation"

\end_inset

 and the matrix multiplications at 
\begin_inset CommandInset ref
LatexCommand formatted
reference "line:multiplyFN"

\end_inset

 with the new algorithms from this thesis.
 The algorithm also returns a list of matrices 
\begin_inset Formula $\mathbf{A}_{1},\dots,\mathbf{A}_{\left\lceil \log n\right\rceil },\mathbf{B}$
\end_inset

 satisfying 
\begin_inset Formula $\mathbf{A}_{1}\dots\mathbf{A}_{\left\lceil \log n\right\rceil }\mathbf{B}^{-1}=\mathbf{F}^{-1}$
\end_inset

, instead of just two matrices 
\begin_inset Formula $\mathbf{A},\mathbf{B}$
\end_inset

 satisfying 
\begin_inset Formula $\mathbf{A}\mathbf{B}^{-1}=\mathbf{F}^{-1}$
\end_inset

.
 We can then compute the product 
\begin_inset Formula $\mathbf{A}=\mathbf{A}_{1}\dots\mathbf{A}_{\left\lceil \log n\right\rceil }$
\end_inset

 with a cost of 
\begin_inset Formula $O^{\sim}\left(n^{2}\xi\right)$
\end_inset

.
 It is interesting to note that the output 
\begin_inset Formula $\mathbf{A}_{1},\dots,\mathbf{A}_{\left\lceil \log n\right\rceil },\mathbf{B}$
\end_inset

 takes only 
\begin_inset Formula $O(n\xi)$
\end_inset

 space, but the product 
\begin_inset Formula $\mathbf{A}=\mathbf{A}_{1}\dots\mathbf{A}_{\left\lceil \log n\right\rceil }$
\end_inset

 takes 
\begin_inset Formula $O(n^{2}\xi)$
\end_inset

 space.
\end_layout

\begin_layout Standard
Let us first look at the cost of the nullspace basis computation and matrix
 multiplications, since they dominate the cost of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:matrixInverse"

\end_inset

.
 
\end_layout

\begin_layout Lemma
The nullspace basis computation at 
\begin_inset CommandInset ref
LatexCommand formatted
reference "line:nullspaceBasisComputation"

\end_inset

 costs 
\begin_inset Formula $O^{\sim}(n^{\omega-1}\xi)$
\end_inset

.
\end_layout

\begin_layout Proof
Just use the earlier nullspace basis algorithm with the shift set to the
 column degrees of the input matrix.
\end_layout

\begin_layout Lemma
The multiplications 
\begin_inset Formula $\mathbf{R}_{1}:=\mathbf{F}_{1}\mathbf{N}_{2}$
\end_inset

 and 
\begin_inset Formula $\mathbf{R}_{2}:=\mathbf{F}_{2}\mathbf{N}_{1}$
\end_inset

at 
\begin_inset CommandInset ref
LatexCommand formatted
reference "line:multiplyFN"

\end_inset

 cost 
\begin_inset Formula $O^{\sim}(n^{\omega-1}\xi)$
\end_inset

.
\end_layout

\begin_layout Proof
From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "thm:boundOfSumOfShiftedDegreesOfNullspaceBasis"

\end_inset

 we know that the sum of the 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees of 
\begin_inset Formula $\mathbf{N}_{1}$
\end_inset

 and that of 
\begin_inset Formula $\mathbf{N}_{2}$
\end_inset

 are both bounded by 
\begin_inset Formula $\xi$
\end_inset

.
 Now 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fastmultiply"

\end_inset

 can be applied.
\end_layout

\begin_layout Theorem
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:matrixInverse"

\end_inset

 cost 
\begin_inset Formula $O^{\sim}\left(n^{\omega-1}\xi\right)$
\end_inset

 to compute an inverse for a 
\begin_inset Formula $n\times n$
\end_inset

 matrix, where 
\begin_inset Formula $\xi$
\end_inset

 is the minimum of the sum of the column degrees and the sum of the row
 degrees of the input matrix.
\end_layout

\begin_layout Proof
If the sum of the row degrees is smaller, we can just transpose the matrix.
 Let the cost be 
\begin_inset Formula $g(n,\xi)$
\end_inset

.
 Then we have the following recursion:
\begin_inset Formula 
\begin{eqnarray*}
g(n,\xi) & \in & O^{\sim}(n^{\omega-1}\xi)+g(\left\lceil n/2\right\rceil ,\xi)+g(\left\lfloor n/2\right\rfloor ,\xi)\\
 & \in & O^{\sim}(n^{\omega-1}\xi)+2g(\left\lceil n/2\right\rceil ,\xi)\\
 & \in & O^{\sim}(n^{\omega-1}\xi).
\end{eqnarray*}

\end_inset

 Note that always round up 
\begin_inset Formula $n/2$
\end_inset

 to 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\left\lceil n/2\right\rceil $
\end_inset

 is no worse than assuming 
\begin_inset Formula $n$
\end_inset

 is a power of 
\begin_inset Formula $2$
\end_inset

.
 In other words, the entries in the sequence 
\begin_inset Formula $\left[\left\lceil n/2\right\rceil ,\left\lceil n/4\right\rceil ,\dots,1\right]$
\end_inset

 is no larger than the corresponding entries in the sequence 
\begin_inset Formula $\left[\left\lceil n'/2\right\rceil ,\left\lceil n'/4\right\rceil ,\dots,1\right]$
\end_inset

, where 
\begin_inset Formula $n'=2^{\left\lceil \log_{2}n\right\rceil }$
\end_inset

.
 
\end_layout

\begin_layout Lemma
The multiplications 
\begin_inset Formula $\mathbf{A}=\mathbf{A}_{1}\dots\mathbf{A}_{\left\lceil \log n\right\rceil }$
\end_inset

 can be done with a cost of 
\begin_inset Formula $O^{\sim}(n^{2}\xi)$
\end_inset

 .
\end_layout

\begin_layout Proof
Note that 
\begin_inset Formula $\mathbf{A}_{i}$
\end_inset

 for 
\begin_inset Formula $i\le\log n$
\end_inset

 has 
\begin_inset Formula $2^{i}$
\end_inset

 blocks on the diagonal.
 Each block of 
\begin_inset Formula $\mathbf{A}_{i}$
\end_inset

 is used to compute two corresponding blocks of 
\begin_inset Formula $\mathbf{A}_{i+1}$
\end_inset

.
 Let us first look at 
\begin_inset Formula $\mathbf{A}_{1}=\left[\mathbf{N}_{2},\mathbf{N}_{1}\right]$
\end_inset

 and 
\begin_inset Formula 
\[
\mathbf{A}_{2}=\begin{bmatrix}\mathbf{N}'_{2} & \mathbf{N}'_{1}\\
 &  & \mathbf{M}'_{2} & \mathbf{M}'_{1}
\end{bmatrix},
\]

\end_inset

 where 
\begin_inset Formula $\mathbf{N}'_{1},$
\end_inset

 
\begin_inset Formula $\mathbf{N}'_{2}$
\end_inset

 are the nullspace bases of the submatrices 
\begin_inset Formula $\mathbf{F}'_{1},$
\end_inset

 
\begin_inset Formula $\mathbf{F}'_{2}$
\end_inset

 contained in 
\begin_inset Formula 
\[
\mathbf{R}_{1}=\begin{bmatrix}\mathbf{F}'_{1}\\
\mathbf{F}'_{2}
\end{bmatrix}=\mathbf{F}_{1}\mathbf{N}_{2}.
\]

\end_inset

 When multiplying 
\begin_inset Formula $\mathbf{A}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{A}_{2}$
\end_inset

, the submatrix 
\begin_inset Formula $\mathbf{N}_{2}$
\end_inset

 of 
\begin_inset Formula $\mathbf{A}_{1}$
\end_inset

 is multiplied with the block 
\begin_inset Formula $\left[\mathbf{N}'_{2},\mathbf{N}'_{1}\right]$
\end_inset

 in 
\begin_inset Formula $\mathbf{A}_{2}$
\end_inset

.
 Let 
\begin_inset Formula $\vec{s}'$
\end_inset

 be the list of the 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees 
\begin_inset Formula $\vec{s}'$
\end_inset

 of 
\begin_inset Formula $\mathbf{N}_{2}$
\end_inset

, where 
\begin_inset Formula $\vec{s}$
\end_inset

 is list of the column degrees of the input matrix 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 Then 
\begin_inset Formula $\sum\vec{s}'\le\sum\vec{s}=\xi$
\end_inset

 by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "thm:boundOfSumOfShiftedDegreesOfNullspaceBasis"

\end_inset

.
 From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:boundOnDegreesOfFA"

\end_inset

, we know the column degrees of 
\begin_inset Formula $\mathbf{R}_{1}:=\mathbf{F}_{1}\mathbf{N}_{2}$
\end_inset

 are bounded component-wise by the 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees 
\begin_inset Formula $\vec{s}'$
\end_inset

 of 
\begin_inset Formula $\mathbf{N}_{2}$
\end_inset

, hence the sum of the column degrees of 
\begin_inset Formula $\mathbf{R}_{1}$
\end_inset

 is also bounded by 
\begin_inset Formula $\xi$
\end_inset

.
 It follows that the sum of 
\begin_inset Formula $\vec{s}'$
\end_inset

-column degrees of 
\begin_inset Formula $\mathbf{N}'_{1}$
\end_inset

 and that of 
\begin_inset Formula $\mathbf{N}'_{2}$
\end_inset

 are each bounded by 
\begin_inset Formula $\xi$
\end_inset

.
 We can therefore use 
\begin_inset CommandInset ref
LatexCommand formatted
reference "thm:multiplyUnbalancedMatrices"

\end_inset

 to multiply 
\begin_inset Formula $\mathbf{N}_{2}$
\end_inset

 and 
\begin_inset Formula $\left[\mathbf{N}'_{2},\mathbf{N}'_{1}\right]$
\end_inset

 with a cost of 
\begin_inset Formula $O^{\sim}\left(n^{\omega-1}\xi\right)$
\end_inset

.
 From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:boundOnDegreesOfFA"

\end_inset

, the 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees of the product 
\begin_inset Formula $\mathbf{N}_{2}\left[\mathbf{N}'_{2},\mathbf{N}'_{1}\right]$
\end_inset

 are bounded by the 
\begin_inset Formula $\vec{s}'$
\end_inset

-column degrees of 
\begin_inset Formula $\left[\mathbf{N}'_{2},\mathbf{N}'_{1}\right]$
\end_inset

, hence the sum of the 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees of each column block in 
\begin_inset Formula $\mathbf{N}_{2}\left[\mathbf{N}'_{2},\mathbf{N}'_{1}\right]=\left[\mathbf{N}_{2}\mathbf{N}'_{2},\mathbf{N}_{2}\mathbf{N}'_{1}\right]$
\end_inset

 is still bounded by 
\begin_inset Formula $\xi$
\end_inset

.
 The multiplication involving 
\begin_inset Formula $\mathbf{N}_{1}$
\end_inset

 and the second block of 
\begin_inset Formula $\mathbf{A}_{2}$
\end_inset

 is done in the same way as the multiplication 
\begin_inset Formula $\mathbf{N}_{2}\left[\mathbf{N}'_{2},\mathbf{N}'_{1}\right]$
\end_inset

, hence the multiplication 
\begin_inset Formula $\mathbf{A}_{1}\mathbf{A}_{2}$
\end_inset

 cost 
\begin_inset Formula $O^{\sim}\left(n^{\omega-1}\xi\right)$
\end_inset

, with the sum of 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees of each of the four column blocks in 
\begin_inset Formula $\mathbf{A}_{1}\mathbf{A}_{2}=\left[\mathbf{N}_{2}\mathbf{N}'_{2},\mathbf{N}_{2}\mathbf{N}'_{1},\mathbf{N}_{1}\mathbf{M}'_{2},\mathbf{N}_{1}\mathbf{M}'_{1}\right]$
\end_inset

 bounded by 
\begin_inset Formula $\xi$
\end_inset

.
\end_layout

\begin_layout Proof
Next, we multiply 
\begin_inset Formula $\mathbf{A}_{1}\mathbf{A}_{2}$
\end_inset

 with 
\begin_inset Formula $\mathbf{A}_{3}$
\end_inset

.
 The matrix 
\begin_inset Formula $\mathbf{A}_{3}$
\end_inset

 now has four blocks on the diagonal.
 Consider 
\begin_inset Formula $\mathbf{N}_{2}\mathbf{N}'_{2}$
\end_inset

 , the first column block of 
\begin_inset Formula $\mathbf{A}_{1}\mathbf{A}_{2}$
\end_inset

, multiplied with the first block 
\begin_inset Formula $\left[\mathbf{N}"_{2},\mathbf{N}"_{1}\right]$
\end_inset

 on the diagonal of 
\begin_inset Formula $\mathbf{A}_{3}$
\end_inset

.
 Let 
\begin_inset Formula $\vec{s}"$
\end_inset

 be the 
\begin_inset Formula $\vec{s}'$
\end_inset

-column degrees of 
\begin_inset Formula $\mathbf{N}'_{2}$
\end_inset

, which bound the 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees of 
\begin_inset Formula $\mathbf{N}_{2}\mathbf{N}'_{2}$
\end_inset

.
 Then 
\begin_inset Formula $\sum\vec{s}"\le\sum\vec{s}'\le\sum\vec{s}=\xi$
\end_inset

.
 Following the same reasoning as before, the sum of the 
\begin_inset Formula $\vec{s}"$
\end_inset

-column degrees of 
\begin_inset Formula $\mathbf{N}"_{2}$
\end_inset

 is still bounded by 
\begin_inset Formula $\xi$
\end_inset

.
 We can therefore again use 
\begin_inset CommandInset ref
LatexCommand formatted
reference "thm:multiplyUnbalancedMatrices"

\end_inset

 to multiply 
\begin_inset Formula $\mathbf{N}_{2}\mathbf{N}'_{2}$
\end_inset

 and 
\begin_inset Formula $\mathbf{N}"_{2}$
\end_inset

.
 The multiplication of the remaining blocks are done in the same way.
 The product 
\begin_inset Formula $\mathbf{A}_{1}\mathbf{A}_{2}\mathbf{A}_{3}$
\end_inset

 now has 8 column blocks, with the sum of the 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees of each column block bounded by 
\begin_inset Formula $\xi$
\end_inset

.
\end_layout

\begin_layout Proof
Repeating this process, we multiply 
\begin_inset Formula $\mathbf{A}_{1}\cdots\mathbf{A}_{i}$
\end_inset

 with 
\begin_inset Formula $\mathbf{A}_{i+1}$
\end_inset

 at step 
\begin_inset Formula $i$
\end_inset

 for 
\begin_inset Formula $i$
\end_inset

 from 1 to 
\begin_inset Formula $\left\lfloor \log n\right\rfloor $
\end_inset

.
 Each of the 
\begin_inset Formula $2^{i}$
\end_inset

 column blocks of 
\begin_inset Formula $\mathbf{A}_{1}\cdots\mathbf{A}_{i}$
\end_inset

 has dimension 
\begin_inset Formula $n\times O(n/2^{i})$
\end_inset

.
 Each of the 
\begin_inset Formula $O(2^{i})$
\end_inset

 column blocks on the diagonal of 
\begin_inset Formula $\mathbf{A}_{i+1}$
\end_inset

 has dimension 
\begin_inset Formula $O(n/2^{i})\times O(n/2^{i})$
\end_inset

.
 (Big 
\begin_inset Formula $O$
\end_inset

 notation is used here because 
\begin_inset Formula $n/2^{i}$
\end_inset

 may not be an integer.) Let 
\begin_inset Formula $\vec{u}_{j}$
\end_inset

 be the shift used to compute the 
\begin_inset Formula $j$
\end_inset

th in 
\begin_inset Formula $\mathbf{A}_{j+1}$
\end_inset

, then as before, the 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees of the 
\begin_inset Formula $j$
\end_inset

th column block in 
\begin_inset Formula $\mathbf{A}_{1}\cdots\mathbf{A}_{i}$
\end_inset

 are bounded by 
\begin_inset Formula $\vec{u}_{j}$
\end_inset

, with 
\begin_inset Formula $\sum\vec{u}_{j}\le\xi$
\end_inset

.
 The sum of the 
\begin_inset Formula $\vec{u}$
\end_inset

-column degrees of the 
\begin_inset Formula $j$
\end_inset

th block in 
\begin_inset Formula $\mathbf{A}_{j+1}$
\end_inset

 is bounded by 
\begin_inset Formula $2\xi$
\end_inset

.
 (Each of the left half and the right half has the sum bounded by 
\begin_inset Formula $\xi$
\end_inset

.) Therefore, multiplying multiply 
\begin_inset Formula $\mathbf{A}_{1}\cdots\mathbf{A}_{i}$
\end_inset

 with 
\begin_inset Formula $\mathbf{A}_{i+1}$
\end_inset

 cost 
\begin_inset Formula $O^{\sim}\left(2^{j}2^{j}\left(n/2^{j}\right)^{\omega-1}\xi\right)$
\end_inset

.
 Take 
\begin_inset Formula $\omega=3,$
\end_inset

 we get 
\begin_inset Formula $O^{\sim}\left(n^{2}\xi\right)$
\end_inset

 as desired.
\end_layout

\begin_layout Remark
Again, it is interesting to note that 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:matrixInverse"

\end_inset

 cost only 
\begin_inset Formula $O^{\sim}\left(n^{\omega-1}\xi\right)$
\end_inset

 to compute the inverse and representing the inverse with 
\begin_inset Formula $O\left(n\xi\log n\right)$
\end_inset

 space.
 It is possible that this representation is useful in some applications.
 For example, if we wish to multiply another low degree matrix or a row
 vector 
\begin_inset Formula $\mathbf{H}$
\end_inset

 by 
\begin_inset Formula $\mathbf{F}^{-1}$
\end_inset

, representing 
\begin_inset Formula $\mathbf{F}^{-1}=\mathbf{A}\mathbf{B}^{-1}$
\end_inset

 requires us to multiply 
\begin_inset Formula $\mathbf{H}$
\end_inset

 with a high degree matrix 
\begin_inset Formula $\mathbf{A}$
\end_inset

, which can be more expensive than the multiplication using the representation
 
\begin_inset Formula $\mathbf{F}^{-1}=\mathbf{A}_{1}\mathbf{A}_{2}\cdots\mathbf{A}_{\left\lceil \log n\right\rceil }\mathbf{B}$
\end_inset

, then 
\begin_inset Formula $\mathbf{H}\mathbf{F}^{-1}=\mathbf{H}\mathbf{A}_{1}\mathbf{A}_{2}\cdots\mathbf{A}_{\left\lceil \log n\right\rceil }\mathbf{B}$
\end_inset

, which is less expensive.
 It may be interesting to look for other applications where this smaller
 representation is useful.
\end_layout

\begin_layout Subsection
Matrix GCD, column reduction, Popov form
\end_layout

\begin_layout Standard
In this section, we consider the problem of computing a matrix GCD.
 An efficient way of computing matrix GCD immediately leads to efficient
 computations of column reduced form, and Popov form.
 First let us recall the definition of matrix GCD.
\end_layout

\begin_layout Definition
Given 
\begin_inset Formula $\mathbf{F}\in\mathbb{K}\left[x\right]^{m\times n}$
\end_inset

.
 A 
\emph on
column GCD
\emph default
 (or 
\emph on
left GCD
\emph default
) of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 is any full column rank 
\begin_inset Formula $\mathbf{T}$
\end_inset

 satisfying 
\begin_inset Formula 
\[
\mathbf{F}\mathbf{U}=\left[0,\mathbf{T}\right]
\]

\end_inset

 with a unimodular matrix 
\begin_inset Formula $\mathbf{U}$
\end_inset

.
 If 
\begin_inset Formula $\mathbf{T}$
\end_inset

 is unimodular, we say 
\begin_inset Formula $\mathbf{F}$
\end_inset

 is 
\emph on
relatively column prime
\emph default
.
\end_layout

\begin_layout Standard
Note that this specializes to polynomial GCD when 
\begin_inset Formula $m=1$
\end_inset

.
 
\end_layout

\begin_layout Standard
For simplicity, let us assume 
\begin_inset Formula $\mathbf{F}\in\mathbb{K}\left[x\right]^{m\times n}$
\end_inset

 with 
\begin_inset Formula $n>m$
\end_inset

 has full row rank, which can be achieved by determining its rank and then
 use compression
\begin_inset CommandInset citation
LatexCommand citep
key "storjohann-villard:2005"

\end_inset

.
 To column reduce 
\begin_inset Formula $\mathbf{F}$
\end_inset

, let us first compute a right minimal nullspace basis 
\begin_inset Formula $\mathbf{N}$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 Then if we compute a left minimal nullspace basis 
\begin_inset Formula $\mathbf{G}$
\end_inset

 of 
\begin_inset Formula $\mathbf{N}$
\end_inset

, we know that 
\begin_inset Formula $\mathbf{G}$
\end_inset

 is a right factor of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 That is, 
\begin_inset Formula $\mathbf{F}=\mathbf{T}\mathbf{G}$
\end_inset

 for some 
\begin_inset Formula $\mathbf{T}\in\mathbb{K}\left[x\right]^{m\times m}$
\end_inset

.
 Now we claim that 
\begin_inset Formula $\mathbf{T}$
\end_inset

 is a GCD of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
\end_layout

\begin_layout Lemma
Given 
\begin_inset Formula $\mathbf{F}\in\mathbb{K}\left[x\right]^{m\times n}$
\end_inset

 with 
\begin_inset Formula $n>m$
\end_inset

 and has full row rank.
 Let 
\begin_inset Formula $\mathbf{N}$
\end_inset

 be a right minimal nullspace basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, and 
\begin_inset Formula $\mathbf{G}$
\end_inset

 be a left minimal nullspace basis of 
\begin_inset Formula $\mathbf{N}$
\end_inset

.
 Then 
\begin_inset Formula $\mathbf{F}=\mathbf{T}\mathbf{G}$
\end_inset

 for some 
\begin_inset Formula $\mathbf{T}\in\mathbb{K}\left[x\right]^{m\times m}$
\end_inset

 and 
\begin_inset Formula $\mathbf{T}$
\end_inset

 is a GCD of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
\end_layout

\begin_layout Proof
To see that 
\begin_inset Formula $\mathbf{G}$
\end_inset

 is a right factor of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, notice that the rows of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 are in the left nullspace of 
\begin_inset Formula $\mathbf{N}$
\end_inset

 and therefore generated by the nullspace basis 
\begin_inset Formula $\mathbf{G}$
\end_inset

.
 It remains to show that 
\begin_inset Formula $\mathbf{T}$
\end_inset

 is a GCD of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
\end_layout

\begin_layout Proof
Consider unimodularly transforming 
\begin_inset Formula $\mathbf{F}$
\end_inset

 to its GCD.
 
\begin_inset Formula 
\begin{eqnarray}
\mathbf{F}\mathbf{U} & = & \mathbf{T}\mathbf{G}\mathbf{U}\nonumber \\
 & = & \mathbf{T}\mathbf{G}\left[\mathbf{N},\mathbf{M}\right]=\left[0,\mathbf{TGM}\right],\label{eq:columnReduction}
\end{eqnarray}

\end_inset

 where 
\begin_inset Formula $\mathbf{U}$
\end_inset

 is an unimodular matrix that contains the nullspace basis 
\begin_inset Formula $\mathbf{N}$
\end_inset

 and the remaining columns in 
\begin_inset Formula $\mathbf{M}$
\end_inset

.
 To show that 
\begin_inset Formula $\mathbf{T}$
\end_inset

 is a GCD of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, we just need to show that 
\begin_inset Formula $\mathbf{H}=\mathbf{GM}$
\end_inset

 is unimodular.
 From Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:columnReduction"

\end_inset

, we get 
\begin_inset Formula $\mathbf{G}\mathbf{U}=\left[0,\mathbf{H}\right]$
\end_inset

, or 
\begin_inset Formula $\mathbf{G}=\mathbf{H}\left[0,I\right]\mathbf{U}^{-1}$
\end_inset

 after rearranging.
 Hence 
\begin_inset Formula $\mathbf{G}$
\end_inset

 is generated by 
\begin_inset Formula $\left[0,I\right]\mathbf{U}^{-1}$
\end_inset

.
 But since 
\begin_inset Formula $\mathbf{G}$
\end_inset

 is a minimal nullspace basis, then 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\left[0,I\right]\mathbf{U}^{-1}$
\end_inset

 must also be a minimal nullspace basis and 
\begin_inset Formula $\mathbf{H}$
\end_inset

 must be unimodular.
 
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{G}$
\end_inset

 is a part of a unimodular matrix.
 Can add rows to 
\begin_inset Formula $\mathbf{G}$
\end_inset

 to complete a unimodular matrix.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We know that the right factor 
\begin_inset Formula $\mathbf{G}$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 can be computed efficiently using our nullspace basis algorithm.
 But We still need to compute a left factor 
\begin_inset Formula $\mathbf{T}$
\end_inset

 from 
\begin_inset Formula $\mathbf{G}$
\end_inset

 and 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 This can be done by computing a left 
\begin_inset Formula $\left[0,\dots,0,d,\dots,d\right]$
\end_inset

-minimal nullspace basis 
\begin_inset Formula $\left[\mathbf{T}',V\right]$
\end_inset

 of 
\begin_inset Formula $\left[\mathbf{G}^{T},\mathbf{F}^{T}\right]^{T}$
\end_inset

, where 
\begin_inset Formula $d$
\end_inset

 is the degree of 
\begin_inset Formula $\mathbf{F},$
\end_inset

 
\begin_inset Formula $V$
\end_inset

 is a unimodular matrix and 
\begin_inset Formula $\mathbf{T}'$
\end_inset

 is the first 
\begin_inset Formula $m\times m$
\end_inset

 matrix.
 Note that 
\begin_inset Formula $\left[\mathbf{T}',V\right]$
\end_inset

 has 
\begin_inset Formula $m$
\end_inset

 rows since the rank of 
\begin_inset Formula $\left[\mathbf{G}^{T},\mathbf{F}^{T}\right]^{T}$
\end_inset

 is 
\begin_inset Formula $m$
\end_inset

.
 Also note that since 
\begin_inset Formula $\left[\mathbf{T},I\right]$
\end_inset

 is a left nullspace basis with 
\begin_inset Formula $\left[0,\dots,0,d,\dots,d\right]$
\end_inset

-row degrees bounded by 
\begin_inset Formula $d$
\end_inset

, the 
\begin_inset Formula $\left[0,\dots,0,d,\dots,d\right]$
\end_inset

-minimal nullspace basis 
\begin_inset Formula $\left[\mathbf{T}',V\right]$
\end_inset

 must also has its 
\begin_inset Formula $\left[0,\dots,0,d,\dots,d\right]$
\end_inset

-row degrees bounded by 
\begin_inset Formula $d$
\end_inset

, hence the degree of 
\begin_inset Formula $V$
\end_inset

 must be 0.
 We can then easily compute 
\begin_inset Formula $\mathbf{T}=\mathbf{T}'V^{-1}$
\end_inset

.
 
\end_layout

\begin_layout Subsection
Unimodular completion
\end_layout

\begin_layout Standard
Given an matrix 
\begin_inset Formula $\mathbf{F}\in\mathbb{K}\left[x\right]^{m\times n}$
\end_inset

 with 
\begin_inset Formula $n>m$
\end_inset

, we consider the problem of finding a matrix 
\begin_inset Formula $\mathbf{G}\in\mathbb{K}\left[x\right]^{(n-m)\times n}$
\end_inset

 such that 
\begin_inset Formula $\left[\mathbf{F}^{T},\mathbf{G}^{T}\right]^{T}$
\end_inset

 is unimodular.
 Such 
\begin_inset Formula $\mathbf{G}$
\end_inset

 exists if and only if 
\begin_inset Formula $\mathbf{F}$
\end_inset

 is relatively column prime.
 To see this, notice that if 
\begin_inset Formula $\mathbf{F}$
\end_inset

 is not relatively column prime, then we can always factor out a nonunimodular
 matrix from 
\begin_inset Formula $\left[\mathbf{F}^{T},\mathbf{G}^{T}\right]^{T}$
\end_inset

 for any 
\begin_inset Formula $\mathbf{G}$
\end_inset

.
 If 
\begin_inset Formula $\mathbf{H}$
\end_inset

 is a left factor of 
\begin_inset Formula $\mathbf{F}$
\end_inset

, then 
\begin_inset Formula $\diag\left(\left[\mathbf{H},I\right]\right)$
\end_inset

 is always a factor of 
\begin_inset Formula $\left[\mathbf{F}^{T},\mathbf{G}^{T}\right]^{T}$
\end_inset

.
 On the other hand, if 
\begin_inset Formula $\mathbf{F}$
\end_inset

 is relatively column prime, we show in this subsection how 
\begin_inset Formula $\mathbf{G}$
\end_inset

 can be computed to make 
\begin_inset Formula $\left[\mathbf{F}^{T},\mathbf{G}^{T}\right]^{T}$
\end_inset

 unimodular.
\end_layout

\begin_layout Standard
First, we compute a minimal nullspace basis 
\begin_inset Formula $\mathbf{N}$
\end_inset

 of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
\end_layout

\begin_layout Lemma
Let 
\begin_inset Formula $\mathbf{N}$
\end_inset

 be a minimal nullspace basis of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 If 
\begin_inset Formula $\mathbf{G}\mathbf{N}$
\end_inset

 is unimodular, then 
\begin_inset Formula $\left[\mathbf{F}^{T},\mathbf{G}^{T}\right]^{T}$
\end_inset

 is unimodular.
\end_layout

\begin_layout Proof
We have 
\begin_inset Formula 
\[
\begin{bmatrix}\mathbf{F}\\
\mathbf{G}
\end{bmatrix}\begin{bmatrix}\mathbf{M} & \mathbf{N}\end{bmatrix}=\begin{bmatrix}\mathbf{F}\mathbf{M} & 0\\
* & \mathbf{G}\mathbf{N}
\end{bmatrix},
\]

\end_inset

 where 
\begin_inset Formula $\mathbf{M}$
\end_inset

 is a matrix that makes 
\begin_inset Formula $\left[\mathbf{M},\mathbf{N}\right]$
\end_inset

 unimodular.
 Then 
\begin_inset Formula $\mathbf{F}\mathbf{M}$
\end_inset

 is a unimodular GCD of 
\begin_inset Formula $\mathbf{F}$
\end_inset

.
 It follows that 
\begin_inset Formula $\mathbf{GN}$
\end_inset

 is unimodular if and only if the matrix on the right side is unimodular
 if and only if 
\begin_inset Formula $\left[\mathbf{F}^{T},\mathbf{G}^{T}\right]^{T}$
\end_inset

 is unimodular.
\end_layout

\begin_layout Standard
Our task now is to compute 
\begin_inset Formula $\mathbf{G}$
\end_inset

 from 
\begin_inset Formula $\mathbf{N}$
\end_inset

 that makes 
\begin_inset Formula $\mathbf{G}\mathbf{N}$
\end_inset

 unimodular.
\end_layout

\begin_layout Lemma
Let 
\shape up

\begin_inset Formula $\mathbf{A}$
\end_inset


\end_layout

\begin_layout Subsection
Triangularization and Hermite normal form
\end_layout

\begin_layout Standard
In this section, we look at the problem of matrix trianularization.
\end_layout

\begin_layout Standard
To triangularize an input matrix 
\begin_inset Formula $\mathbf{F}\in\mathbb{K}\left[x\right]^{m\times n}$
\end_inset

, we work in two stages.
 First, we determine the diagonal entries of its triangular form 
\begin_inset Formula $\mathbf{T}$
\end_inset

, and then divide the computations according to the size of the diagonal
 diagonal entries to compute the remaining elements.
 
\end_layout

\begin_layout Standard
We wish to avoid computing the unimodular transformation matrix since its
 degrees are too high to allow efficient computation.
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:triangularize"

\end_inset

 allows us to triangularize without computing the unimodular matrix.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:triangularize"

\end_inset

Let 
\begin_inset Formula 
\[
\begin{bmatrix}\mathbf{F}_{1}\\
\mathbf{F}_{2}
\end{bmatrix}:=\mathbf{F}.
\]

\end_inset

 Let 
\begin_inset Formula $\mathbf{\hat{F}}_{1}$
\end_inset

 be a GCD of 
\begin_inset Formula $\mathbf{F}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{N}_{1}$
\end_inset

 be a minimal nullspace basis, then 
\begin_inset Formula $\mathbf{F}$
\end_inset

 can be unimodularly reduced to 
\begin_inset Formula 
\[
\hat{\mathbf{F}}=\begin{bmatrix}\begin{array}{cc}
\hat{\mathbf{F}}_{1} & 0\end{array}\\
\mathbf{F}_{2}\mathbf{N}_{1}
\end{bmatrix}
\]

\end_inset

 
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $\mathbf{U}=\left[\mathbf{M},\mathbf{N}\right]$
\end_inset

 be a unimodular matrix such that 
\begin_inset Formula $\mathbf{F}_{1}\mathbf{U}=\left[\mathbf{F}_{1}\mathbf{M},\mathbf{F}_{1}\mathbf{N}\right]=\left[\hat{\mathbf{F}}_{1},0\right]$
\end_inset

.
 Then we know that 
\begin_inset Formula $\mathbf{N}=\mathbf{N}_{1}\mathbf{V}$
\end_inset

 for a unimodular matrix 
\begin_inset Formula $\mathbf{V}$
\end_inset

, since both 
\begin_inset Formula $\mathbf{N}$
\end_inset

 and 
\begin_inset Formula $\mathbf{N}_{1}$
\end_inset

 are nullspace basis.
 Therefore, 
\begin_inset Formula $\mathbf{U}\diag(\left[I,\mathbf{V}\right])=\left[\mathbf{M},\mathbf{N}_{1}\right]$
\end_inset

 is still a unimodular matrix that transforms 
\begin_inset Formula $\mathbf{F}$
\end_inset

 to 
\begin_inset Formula $\hat{\mathbf{F}}$
\end_inset

.
\end_layout

\begin_layout Subsection
Determinant
\end_layout

\begin_layout Lemma
If 
\begin_inset Formula $\mathbf{A}\in\mathbb{K}\left[x\right]^{n\times n}$
\end_inset

 is 
\begin_inset Formula $\vec{s}$
\end_inset

-column reduced with 
\begin_inset Formula $\vec{s}$
\end_inset

-column degrees 
\begin_inset Formula $\vec{t}$
\end_inset

, then its determinant 
\begin_inset Formula $\det(\mathbf{A})$
\end_inset

 has degree 
\begin_inset Formula $\sum\vec{t}-\sum\vec{s}$
\end_inset

.
\end_layout

\begin_layout Proof
Since 
\begin_inset Formula $x^{\vec{s}}\mathbf{A}$
\end_inset

 is column reduced with column degrees 
\begin_inset Formula $\vec{t}$
\end_inset

, we have 
\begin_inset Formula $\deg\det(x^{\vec{s}}\mathbf{A})=\sum\vec{t}$
\end_inset

.
 We also have 
\begin_inset Formula $\deg\det(x^{\vec{s}})=\sum\vec{s}$
\end_inset

, hence the 
\begin_inset Formula $\deg\det(\mathbf{A})=\sum\vec{t}-\sum\vec{s}$
\end_inset

.
\end_layout

\begin_layout Lemma
If 
\begin_inset Formula 
\[
\mathbf{A}=\begin{bmatrix}\mathbf{A}_{1}\\
\mathbf{A}_{2}
\end{bmatrix}\in\mathbb{K}\left[x\right]^{n\times n},
\]

\end_inset

 where 
\begin_inset Formula $\mathbf{A}_{1}$
\end_inset

 consists of 
\begin_inset Formula $k$
\end_inset

 top rows of 
\begin_inset Formula $\mathbf{A}$
\end_inset

, with 
\begin_inset Formula $1\le k\le n-1$
\end_inset

.
 Let 
\begin_inset Formula $\mathbf{N}_{1}$
\end_inset

, 
\begin_inset Formula $\mathbf{N}_{2}$
\end_inset

 be the minimal nullspace bases of 
\begin_inset Formula $\mathbf{A}_{1}$
\end_inset

, 
\begin_inset Formula $\mathbf{A}_{2}$
\end_inset

 respectively.
 Then 
\end_layout

\end_body
\end_document
